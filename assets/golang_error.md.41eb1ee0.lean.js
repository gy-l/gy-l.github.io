import{_ as n,c as s,a,b as p,o as t}from"./app.2ef81f74.js";const d='{"title":"\u524D\u8A00","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u524D\u8A00","slug":"\u524D\u8A00"},{"level":2,"title":"\u521D\u7EA7\u7BC7\uFF1A1-34","slug":"\u521D\u7EA7\u7BC7\uFF1A1-34"},{"level":3,"title":"1. \u5DE6\u5927\u62EC\u53F7 { \u4E0D\u80FD\u5355\u72EC\u653E\u4E00\u884C","slug":"_1-\u5DE6\u5927\u62EC\u53F7-\u4E0D\u80FD\u5355\u72EC\u653E\u4E00\u884C"},{"level":3,"title":"2. \u672A\u4F7F\u7528\u7684\u53D8\u91CF","slug":"_2-\u672A\u4F7F\u7528\u7684\u53D8\u91CF"},{"level":3,"title":"3. \u672A\u4F7F\u7528\u7684 import","slug":"_3-\u672A\u4F7F\u7528\u7684-import"},{"level":3,"title":"4. \u7B80\u77ED\u58F0\u660E\u7684\u53D8\u91CF\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528","slug":"_4-\u7B80\u77ED\u58F0\u660E\u7684\u53D8\u91CF\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528"},{"level":3,"title":"5. \u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u91CD\u590D\u58F0\u660E\u53D8\u91CF","slug":"_5-\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u91CD\u590D\u58F0\u660E\u53D8\u91CF"},{"level":3,"title":"6. \u4E0D\u80FD\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C","slug":"_6-\u4E0D\u80FD\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C"},{"level":3,"title":"7. \u4E0D\u5C0F\u5FC3\u8986\u76D6\u4E86\u53D8\u91CF","slug":"_7-\u4E0D\u5C0F\u5FC3\u8986\u76D6\u4E86\u53D8\u91CF"},{"level":3,"title":"8. \u663E\u5F0F\u7C7B\u578B\u7684\u53D8\u91CF\u65E0\u6CD5\u4F7F\u7528 nil \u6765\u521D\u59CB\u5316","slug":"_8-\u663E\u5F0F\u7C7B\u578B\u7684\u53D8\u91CF\u65E0\u6CD5\u4F7F\u7528-nil-\u6765\u521D\u59CB\u5316"},{"level":3,"title":"9. \u76F4\u63A5\u4F7F\u7528\u503C\u4E3A nil \u7684 slice\u3001map","slug":"_9-\u76F4\u63A5\u4F7F\u7528\u503C\u4E3A-nil-\u7684-slice\u3001map"},{"level":3,"title":"10. map \u5BB9\u91CF","slug":"_10-map-\u5BB9\u91CF"},{"level":3,"title":"11. string \u7C7B\u578B\u7684\u53D8\u91CF\u503C\u4E0D\u80FD\u4E3A nil","slug":"_11-string-\u7C7B\u578B\u7684\u53D8\u91CF\u503C\u4E0D\u80FD\u4E3A-nil"},{"level":3,"title":"12. Array \u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570","slug":"_12-array-\u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570"},{"level":3,"title":"13. range \u904D\u5386 slice \u548C array \u65F6\u6DF7\u6DC6\u4E86\u8FD4\u56DE\u503C","slug":"_13-range-\u904D\u5386-slice-\u548C-array-\u65F6\u6DF7\u6DC6\u4E86\u8FD4\u56DE\u503C"},{"level":3,"title":"14. slice \u548C array \u5176\u5B9E\u662F\u4E00\u7EF4\u6570\u636E","slug":"_14-slice-\u548C-array-\u5176\u5B9E\u662F\u4E00\u7EF4\u6570\u636E"},{"level":3,"title":"15. \u8BBF\u95EE map \u4E2D\u4E0D\u5B58\u5728\u7684 key","slug":"_15-\u8BBF\u95EE-map-\u4E2D\u4E0D\u5B58\u5728\u7684-key"},{"level":3,"title":"16. string \u7C7B\u578B\u7684\u503C\u662F\u5E38\u91CF\uFF0C\u4E0D\u53EF\u66F4\u6539","slug":"_16-string-\u7C7B\u578B\u7684\u503C\u662F\u5E38\u91CF\uFF0C\u4E0D\u53EF\u66F4\u6539"},{"level":3,"title":"17. string \u4E0E byte slice \u4E4B\u95F4\u7684\u8F6C\u6362","slug":"_17-string-\u4E0E-byte-slice-\u4E4B\u95F4\u7684\u8F6C\u6362"},{"level":3,"title":"18. string \u4E0E\u7D22\u5F15\u64CD\u4F5C\u7B26","slug":"_18-string-\u4E0E\u7D22\u5F15\u64CD\u4F5C\u7B26"},{"level":3,"title":"19. \u5B57\u7B26\u4E32\u5E76\u4E0D\u90FD\u662F UTF8 \u6587\u672C","slug":"_19-\u5B57\u7B26\u4E32\u5E76\u4E0D\u90FD\u662F-utf8-\u6587\u672C"},{"level":3,"title":"20. \u5B57\u7B26\u4E32\u7684\u957F\u5EA6","slug":"_20-\u5B57\u7B26\u4E32\u7684\u957F\u5EA6"},{"level":3,"title":"21. \u5728\u591A\u884C array\u3001slice\u3001map \u8BED\u53E5\u4E2D\u7F3A\u5C11 , \u53F7","slug":"_21-\u5728\u591A\u884C-array\u3001slice\u3001map-\u8BED\u53E5\u4E2D\u7F3A\u5C11-\u53F7"},{"level":3,"title":"22. log.Fatal \u548C log.Panic \u4E0D\u53EA\u662F log","slug":"_22-log-fatal-\u548C-log-panic-\u4E0D\u53EA\u662F-log"},{"level":3,"title":"23. \u5BF9\u5185\u5EFA\u6570\u636E\u7ED3\u6784\u7684\u64CD\u4F5C\u5E76\u4E0D\u662F\u540C\u6B65\u7684","slug":"_23-\u5BF9\u5185\u5EFA\u6570\u636E\u7ED3\u6784\u7684\u64CD\u4F5C\u5E76\u4E0D\u662F\u540C\u6B65\u7684"},{"level":3,"title":"24. range \u8FED\u4EE3 string \u5F97\u5230\u7684\u503C","slug":"_24-range-\u8FED\u4EE3-string-\u5F97\u5230\u7684\u503C"},{"level":3,"title":"25. range \u8FED\u4EE3 map","slug":"_25-range-\u8FED\u4EE3-map"},{"level":3,"title":"26. switch \u4E2D\u7684 fallthrough \u8BED\u53E5","slug":"_26-switch-\u4E2D\u7684-fallthrough-\u8BED\u53E5"},{"level":3,"title":"27. \u81EA\u589E\u548C\u81EA\u51CF\u8FD0\u7B97","slug":"_27-\u81EA\u589E\u548C\u81EA\u51CF\u8FD0\u7B97"},{"level":3,"title":"28. \u6309\u4F4D\u53D6\u53CD","slug":"_28-\u6309\u4F4D\u53D6\u53CD"},{"level":3,"title":"29. \u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7","slug":"_29-\u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7"},{"level":3,"title":"30. \u4E0D\u5BFC\u51FA\u7684 struct \u5B57\u6BB5\u65E0\u6CD5\u88AB encode","slug":"_30-\u4E0D\u5BFC\u51FA\u7684-struct-\u5B57\u6BB5\u65E0\u6CD5\u88AB-encode"},{"level":3,"title":"31. \u7A0B\u5E8F\u9000\u51FA\u65F6\u8FD8\u6709 goroutine \u5728\u6267\u884C","slug":"_31-\u7A0B\u5E8F\u9000\u51FA\u65F6\u8FD8\u6709-goroutine-\u5728\u6267\u884C"},{"level":3,"title":"32. \u5411\u65E0\u7F13\u51B2\u7684 channel \u53D1\u9001\u6570\u636E\uFF0C\u53EA\u8981 receiver \u51C6\u5907\u597D\u4E86\u5C31\u4F1A\u7ACB\u523B\u8FD4\u56DE","slug":"_32-\u5411\u65E0\u7F13\u51B2\u7684-channel-\u53D1\u9001\u6570\u636E\uFF0C\u53EA\u8981-receiver-\u51C6\u5907\u597D\u4E86\u5C31\u4F1A\u7ACB\u523B\u8FD4\u56DE"},{"level":3,"title":"33. \u5411\u5DF2\u5173\u95ED\u7684 channel \u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210 panic","slug":"_33-\u5411\u5DF2\u5173\u95ED\u7684-channel-\u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210-panic"},{"level":3,"title":"34. \u4F7F\u7528\u4E86\u503C\u4E3A nil \u7684 channel","slug":"_34-\u4F7F\u7528\u4E86\u503C\u4E3A-nil-\u7684-channel"},{"level":3,"title":"34. \u82E5\u51FD\u6570 receiver \u4F20\u53C2\u662F\u4F20\u503C\u65B9\u5F0F\uFF0C\u5219\u65E0\u6CD5\u4FEE\u6539\u53C2\u6570\u7684\u539F\u6709\u503C","slug":"_34-\u82E5\u51FD\u6570-receiver-\u4F20\u53C2\u662F\u4F20\u503C\u65B9\u5F0F\uFF0C\u5219\u65E0\u6CD5\u4FEE\u6539\u53C2\u6570\u7684\u539F\u6709\u503C"},{"level":2,"title":"\u4E2D\u7EA7\u7BC7\uFF1A35-50","slug":"\u4E2D\u7EA7\u7BC7\uFF1A35-50"},{"level":3,"title":"35. \u5173\u95ED HTTP \u7684\u54CD\u5E94\u4F53","slug":"_35-\u5173\u95ED-http-\u7684\u54CD\u5E94\u4F53"},{"level":3,"title":"36. \u5173\u95ED HTTP \u8FDE\u63A5","slug":"_36-\u5173\u95ED-http-\u8FDE\u63A5"},{"level":3,"title":"37. \u5C06 JSON \u4E2D\u7684\u6570\u5B57\u89E3\u7801\u4E3A interface \u7C7B\u578B","slug":"_37-\u5C06-json-\u4E2D\u7684\u6570\u5B57\u89E3\u7801\u4E3A-interface-\u7C7B\u578B"},{"level":3,"title":"38. struct\u3001array\u3001slice \u548C map \u7684\u503C\u6BD4\u8F83","slug":"_38-struct\u3001array\u3001slice-\u548C-map-\u7684\u503C\u6BD4\u8F83"},{"level":3,"title":"39. \u4ECE panic \u4E2D\u6062\u590D","slug":"_39-\u4ECE-panic-\u4E2D\u6062\u590D"},{"level":3,"title":"40. \u5728 range \u8FED\u4EE3 slice\u3001array\u3001map \u65F6\u901A\u8FC7\u66F4\u65B0\u5F15\u7528\u6765\u66F4\u65B0\u5143\u7D20","slug":"_40-\u5728-range-\u8FED\u4EE3-slice\u3001array\u3001map-\u65F6\u901A\u8FC7\u66F4\u65B0\u5F15\u7528\u6765\u66F4\u65B0\u5143\u7D20"},{"level":3,"title":"41. slice \u4E2D\u9690\u85CF\u7684\u6570\u636E","slug":"_41-slice-\u4E2D\u9690\u85CF\u7684\u6570\u636E"},{"level":3,"title":"42. Slice \u4E2D\u6570\u636E\u7684\u8BEF\u7528","slug":"_42-slice-\u4E2D\u6570\u636E\u7684\u8BEF\u7528"},{"level":3,"title":"43. \u65E7 slice","slug":"_43-\u65E7-slice"},{"level":3,"title":"44. \u7C7B\u578B\u58F0\u660E\u4E0E\u65B9\u6CD5","slug":"_44-\u7C7B\u578B\u58F0\u660E\u4E0E\u65B9\u6CD5"},{"level":3,"title":"45. \u8DF3\u51FA for-switch \u548C for-select \u4EE3\u7801\u5757","slug":"_45-\u8DF3\u51FA-for-switch-\u548C-for-select-\u4EE3\u7801\u5757"},{"level":3,"title":"46. for \u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u4E0E\u95ED\u5305\u51FD\u6570","slug":"_46-for-\u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u4E0E\u95ED\u5305\u51FD\u6570"},{"level":3,"title":"47. defer \u51FD\u6570\u7684\u53C2\u6570\u503C","slug":"_47-defer-\u51FD\u6570\u7684\u53C2\u6570\u503C"},{"level":3,"title":"48. defer \u51FD\u6570\u7684\u6267\u884C\u65F6\u673A","slug":"_48-defer-\u51FD\u6570\u7684\u6267\u884C\u65F6\u673A"},{"level":3,"title":"49. \u5931\u8D25\u7684\u7C7B\u578B\u65AD\u8A00","slug":"_49-\u5931\u8D25\u7684\u7C7B\u578B\u65AD\u8A00"},{"level":3,"title":"50. \u963B\u585E\u7684 gorutinue \u4E0E\u8D44\u6E90\u6CC4\u9732","slug":"_50-\u963B\u585E\u7684-gorutinue-\u4E0E\u8D44\u6E90\u6CC4\u9732"},{"level":2,"title":"\u9AD8\u7EA7\u7BC7\uFF1A51-57","slug":"\u9AD8\u7EA7\u7BC7\uFF1A51-57"},{"level":3,"title":"51. \u4F7F\u7528\u6307\u9488\u4F5C\u4E3A\u65B9\u6CD5\u7684 receiver","slug":"_51-\u4F7F\u7528\u6307\u9488\u4F5C\u4E3A\u65B9\u6CD5\u7684-receiver"},{"level":3,"title":"52. \u66F4\u65B0 map \u5B57\u6BB5\u7684\u503C","slug":"_52-\u66F4\u65B0-map-\u5B57\u6BB5\u7684\u503C"},{"level":3,"title":"53. nil interface \u548C nil interface \u503C","slug":"_53-nil-interface-\u548C-nil-interface-\u503C"},{"level":3,"title":"54. \u5806\u6808\u53D8\u91CF","slug":"_54-\u5806\u6808\u53D8\u91CF"},{"level":3,"title":"55. GOMAXPROCS\u3001Concurrency\uFF08\u5E76\u53D1\uFF09and Parallelism\uFF08\u5E76\u884C\uFF09","slug":"_55-gomaxprocs\u3001concurrency\uFF08\u5E76\u53D1\uFF09and-parallelism\uFF08\u5E76\u884C\uFF09"},{"level":3,"title":"56. \u8BFB\u5199\u64CD\u4F5C\u7684\u91CD\u65B0\u6392\u5E8F","slug":"_56-\u8BFB\u5199\u64CD\u4F5C\u7684\u91CD\u65B0\u6392\u5E8F"},{"level":3,"title":"57. \u4F18\u5148\u8C03\u5EA6","slug":"_57-\u4F18\u5148\u8C03\u5EA6"}],"relativePath":"golang/error.md","lastUpdated":1643168569144}',e={},o=p(`__VP_STATIC_START__<h2 id="\u524D\u8A00" tabindex="-1">\u524D\u8A00 <a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a></h2><p>Go \u662F\u4E00\u95E8\u7B80\u5355\u6709\u8DA3\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u4E0E\u5176\u4ED6\u8BED\u8A00\u4E00\u6837\uFF0C\u5728\u4F7F\u7528\u65F6\u4E0D\u514D\u4F1A\u9047\u5230\u5F88\u591A\u5751\uFF0C\u4E0D\u8FC7\u5B83\u4EEC\u5927\u591A\u4E0D\u662F Go \u672C\u8EAB\u7684\u8BBE\u8BA1\u7F3A\u9677\u3002\u5982\u679C\u4F60\u521A\u4ECE\u5176\u4ED6\u8BED\u8A00\u8F6C\u5230 Go\uFF0C\u90A3\u8FD9\u7BC7\u6587\u7AE0\u91CC\u7684\u5751\u591A\u534A\u4F1A\u8E29\u5230\u3002</p><p>\u5982\u679C\u82B1\u65F6\u95F4\u5B66\u4E60\u5B98\u65B9 doc\u3001wiki\u3001<a href="https://groups.google.com/forum/#!forum/golang-nuts" target="_blank" rel="noopener noreferrer">\u8BA8\u8BBA\u90AE\u4EF6\u5217\u8868</a>\u3001 <a href="https://github.com/robpike" target="_blank" rel="noopener noreferrer">Rob Pike</a> \u7684\u5927\u91CF\u6587\u7AE0\u4EE5\u53CA Go \u7684\u6E90\u7801\uFF0C\u4F1A\u53D1\u73B0\u8FD9\u7BC7\u6587\u7AE0\u4E2D\u7684\u5751\u662F\u5F88\u5E38\u89C1\u7684\uFF0C\u65B0\u624B\u8DF3\u8FC7\u8FD9\u4E9B\u5751\uFF0C\u80FD\u51CF\u5C11\u5927\u91CF\u8C03\u8BD5\u4EE3\u7801\u7684\u65F6\u95F4\u3002</p><h2 id="\u521D\u7EA7\u7BC7\uFF1A1-34" tabindex="-1">\u521D\u7EA7\u7BC7\uFF1A1-34 <a class="header-anchor" href="#\u521D\u7EA7\u7BC7\uFF1A1-34" aria-hidden="true">#</a></h2><h3 id="_1-\u5DE6\u5927\u62EC\u53F7-\u4E0D\u80FD\u5355\u72EC\u653E\u4E00\u884C" tabindex="-1">1. \u5DE6\u5927\u62EC\u53F7 <code>{</code> \u4E0D\u80FD\u5355\u72EC\u653E\u4E00\u884C <a class="header-anchor" href="#_1-\u5DE6\u5927\u62EC\u53F7-\u4E0D\u80FD\u5355\u72EC\u653E\u4E00\u884C" aria-hidden="true">#</a></h3><p>\u5728\u5176\u4ED6\u5927\u591A\u6570\u8BED\u8A00\u4E2D\uFF0C<code>{</code> \u7684\u4F4D\u7F6E\u4F60\u81EA\u884C\u51B3\u5B9A\u3002Go \u6BD4\u8F83\u7279\u522B\uFF0C\u9075\u5B88\u5206\u53F7\u6CE8\u5165\u89C4\u5219\uFF08automatic semicolon injection\uFF09\uFF1A\u7F16\u8BD1\u5668\u4F1A\u5728\u6BCF\u884C\u4EE3\u7801\u5C3E\u90E8\u7279\u5B9A\u5206\u9694\u7B26\u540E\u52A0 <code>;</code> \u6765\u5206\u9694\u591A\u6761\u8BED\u53E5\uFF0C\u6BD4\u5982\u4F1A\u5728 <code>)</code> \u540E\u52A0\u5206\u53F7\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u6548\u4E8E</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u65E0\u51FD\u6570\u4F53</span>
<span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>./main.go: missing function body</p></blockquote><blockquote><p>./main.go: syntax error: unexpected semicolon or newline before {</p></blockquote><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-\u672A\u4F7F\u7528\u7684\u53D8\u91CF" tabindex="-1">2. \u672A\u4F7F\u7528\u7684\u53D8\u91CF <a class="header-anchor" href="#_2-\u672A\u4F7F\u7528\u7684\u53D8\u91CF" aria-hidden="true">#</a></h3><p>\u5982\u679C\u5728\u51FD\u6570\u4F53\u4EE3\u7801\u4E2D\u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\uFF0C\u5219\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\uFF0C\u4E0D\u8FC7\u5168\u5C40\u53D8\u91CF\u58F0\u660E\u4F46\u4E0D\u4F7F\u7528\u662F\u53EF\u4EE5\u7684\u3002</p><p>\u5373\u4F7F\u53D8\u91CF\u58F0\u660E\u540E\u4E3A\u53D8\u91CF\u8D4B\u503C\uFF0C\u4F9D\u65E7\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\uFF0C\u9700\u5728\u67D0\u5904\u4F7F\u7528\u5B83\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">var</span> gvar <span class="token builtin">int</span>     <span class="token comment">// \u5168\u5C40\u53D8\u91CF\uFF0C\u58F0\u660E\u4E0D\u4F7F\u7528\u4E5F\u53EF\u4EE5</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> one <span class="token builtin">int</span>     <span class="token comment">// error: one declared and not used</span>
    two <span class="token operator">:=</span> <span class="token number">2</span>    <span class="token comment">// error: two declared and not used</span>
    <span class="token keyword">var</span> three <span class="token builtin">int</span>    <span class="token comment">// error: three declared and not used</span>
    three <span class="token operator">=</span> <span class="token number">3</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token comment">// \u53EF\u4EE5\u76F4\u63A5\u6CE8\u91CA\u6216\u79FB\u9664\u672A\u4F7F\u7528\u7684\u53D8\u91CF</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> one <span class="token builtin">int</span>
    <span class="token boolean">_</span> <span class="token operator">=</span> one

    two <span class="token operator">:=</span> <span class="token number">2</span>
    <span class="token function">println</span><span class="token punctuation">(</span>two<span class="token punctuation">)</span>

    <span class="token keyword">var</span> three <span class="token builtin">int</span>
    one <span class="token operator">=</span> three

    <span class="token keyword">var</span> four <span class="token builtin">int</span>
    four <span class="token operator">=</span> four
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="_3-\u672A\u4F7F\u7528\u7684-import" tabindex="-1">3. \u672A\u4F7F\u7528\u7684 import <a class="header-anchor" href="#_3-\u672A\u4F7F\u7528\u7684-import" aria-hidden="true">#</a></h3><p>\u5982\u679C\u4F60 import \u4E00\u4E2A\u5305\uFF0C\u4F46\u5305\u4E2D\u7684\u53D8\u91CF\u3001\u51FD\u6570\u3001\u63A5\u53E3\u548C\u7ED3\u6784\u4F53\u4E00\u4E2A\u90FD\u6CA1\u6709\u7528\u5230\u7684\u8BDD\uFF0C\u5C06\u7F16\u8BD1\u5931\u8D25\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528 <code>_</code> \u4E0B\u5212\u7EBF\u7B26\u53F7\u4F5C\u4E3A\u522B\u540D\u6765\u5FFD\u7565\u5BFC\u5165\u7684\u5305\uFF0C\u4ECE\u800C\u907F\u514D\u7F16\u8BD1\u9519\u8BEF\uFF0C\u8FD9\u53EA\u4F1A\u6267\u884C package \u7684 <code>init()</code></p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>    <span class="token comment">// imported and not used: &quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>    <span class="token comment">// imported and not used: &quot;log&quot;</span>
    <span class="token string">&quot;time&quot;</span>    <span class="token comment">// imported and not used: &quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 goimports \u5DE5\u5177\u6765\u6CE8\u91CA\u6216\u79FB\u9664\u672A\u4F7F\u7528\u5230\u7684\u5305</span>
<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token boolean">_</span> <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>
    <span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token boolean">_</span> <span class="token operator">=</span> log<span class="token punctuation">.</span>Println
    <span class="token boolean">_</span> <span class="token operator">=</span> time<span class="token punctuation">.</span>Now
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="_4-\u7B80\u77ED\u58F0\u660E\u7684\u53D8\u91CF\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528" tabindex="-1">4. \u7B80\u77ED\u58F0\u660E\u7684\u53D8\u91CF\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528 <a class="header-anchor" href="#_4-\u7B80\u77ED\u58F0\u660E\u7684\u53D8\u91CF\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528" aria-hidden="true">#</a></h3><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
myvar <span class="token operator">:=</span> <span class="token number">1</span>    <span class="token comment">// syntax error: non-declaration statement outside function body</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">var</span>  myvar <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_5-\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u91CD\u590D\u58F0\u660E\u53D8\u91CF" tabindex="-1">5. \u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u91CD\u590D\u58F0\u660E\u53D8\u91CF <a class="header-anchor" href="#_5-\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u91CD\u590D\u58F0\u660E\u53D8\u91CF" aria-hidden="true">#</a></h3><p>\u4E0D\u80FD\u7528\u7B80\u77ED\u58F0\u660E\u65B9\u5F0F\u6765\u5355\u72EC\u4E3A\u4E00\u4E2A\u53D8\u91CF\u91CD\u590D\u58F0\u660E\uFF0C <code>:=</code> \u5DE6\u4FA7\u81F3\u5C11\u6709\u4E00\u4E2A\u65B0\u53D8\u91CF\uFF0C\u624D\u5141\u8BB8\u591A\u53D8\u91CF\u7684\u91CD\u590D\u58F0\u660E\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    one <span class="token operator">:=</span> <span class="token number">0</span>
    one <span class="token operator">:=</span> <span class="token number">1</span> <span class="token comment">// error: no new variables on left side of :=</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    one <span class="token operator">:=</span> <span class="token number">0</span>
    one<span class="token punctuation">,</span> two <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>    <span class="token comment">// two \u662F\u65B0\u53D8\u91CF\uFF0C\u5141\u8BB8 one \u7684\u91CD\u590D\u58F0\u660E\u3002\u6BD4\u5982 error \u5904\u7406\u7ECF\u5E38\u7528\u540C\u540D\u53D8\u91CF err</span>
    one<span class="token punctuation">,</span> two <span class="token operator">=</span> two<span class="token punctuation">,</span> one    <span class="token comment">// \u4EA4\u6362\u4E24\u4E2A\u53D8\u91CF\u503C\u7684\u7B80\u5199</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_6-\u4E0D\u80FD\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C" tabindex="-1">6. \u4E0D\u80FD\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C <a class="header-anchor" href="#_6-\u4E0D\u80FD\u4F7F\u7528\u7B80\u77ED\u58F0\u660E\u6765\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C" aria-hidden="true">#</a></h3><p>struct \u7684\u53D8\u91CF\u5B57\u6BB5\u4E0D\u80FD\u4F7F\u7528 <code>:=</code> \u6765\u8D4B\u503C\u4EE5\u4F7F\u7528\u9884\u5B9A\u4E49\u7684\u53D8\u91CF\u6765\u907F\u514D\u89E3\u51B3\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">type</span> info <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    result <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data info
    data<span class="token punctuation">.</span>result<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// error: non-name data.result on left side of :=</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;info: %+v\\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data info
    <span class="token keyword">var</span> err <span class="token builtin">error</span>    <span class="token comment">// err \u9700\u8981\u9884\u58F0\u660E</span>

    data<span class="token punctuation">.</span>result<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;info: %+v\\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_7-\u4E0D\u5C0F\u5FC3\u8986\u76D6\u4E86\u53D8\u91CF" tabindex="-1">7. \u4E0D\u5C0F\u5FC3\u8986\u76D6\u4E86\u53D8\u91CF <a class="header-anchor" href="#_7-\u4E0D\u5C0F\u5FC3\u8986\u76D6\u4E86\u53D8\u91CF" aria-hidden="true">#</a></h3><p>\u5BF9\u4ECE\u52A8\u6001\u8BED\u8A00\u8F6C\u8FC7\u6765\u7684\u5F00\u53D1\u8005\u6765\u8BF4\uFF0C\u7B80\u77ED\u58F0\u660E\u5F88\u597D\u7528\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u8BA9\u4EBA\u8BEF\u4F1A <code>:=</code> \u662F\u4E00\u4E2A\u8D4B\u503C\u64CD\u4F5C\u7B26\u3002</p><p>\u5982\u679C\u4F60\u5728\u65B0\u7684\u4EE3\u7801\u5757\u4E2D\u50CF\u4E0B\u8FB9\u8FD9\u6837\u8BEF\u7528\u4E86 <code>:=</code>\uFF0C\u7F16\u8BD1\u4E0D\u4F1A\u62A5\u9519\uFF0C\u4F46\u662F\u53D8\u91CF\u4E0D\u4F1A\u6309\u4F60\u7684\u9884\u671F\u5DE5\u4F5C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token number">1</span>
    <span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment">// 1</span>
    <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// 1</span>
        x <span class="token operator">:=</span> <span class="token number">2</span>
        <span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// 2    // \u65B0\u7684 x \u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u53EA\u5728\u4EE3\u7801\u5757\u5185\u90E8</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment">// 1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u662F Go \u5F00\u53D1\u8005\u5E38\u72AF\u7684\u9519\uFF0C\u800C\u4E14\u4E0D\u6613\u88AB\u53D1\u73B0\u3002</p><p>\u53EF\u4F7F\u7528 <a href="http://godoc.org/golang.org/x/tools/cmd/vet" target="_blank" rel="noopener noreferrer">vet</a> \u5DE5\u5177\u6765\u8BCA\u65AD\u8FD9\u79CD\u53D8\u91CF\u8986\u76D6\uFF0CGo \u9ED8\u8BA4\u4E0D\u505A\u8986\u76D6\u68C0\u67E5\uFF0C\u6DFB\u52A0 <code>-shadow</code> \u9009\u9879\u6765\u542F\u7528\uFF1A</p><div class="language-"><pre><code>&gt; go tool vet -shadow main.go
main.go:9: declaration of &quot;x&quot; shadows declaration at main.go:5
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CE8\u610F vet \u4E0D\u4F1A\u62A5\u544A\u5168\u90E8\u88AB\u8986\u76D6\u7684\u53D8\u91CF\uFF0C\u53EF\u4EE5\u4F7F\u7528 <a href="https://github.com/barakmich/go-nyet" target="_blank" rel="noopener noreferrer">go-nyet</a> \u6765\u505A\u8FDB\u4E00\u6B65\u7684\u68C0\u6D4B\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token operator">&gt;</span> $GOPATH<span class="token operator">/</span>bin<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>nyet main<span class="token punctuation">.</span><span class="token keyword">go</span>
main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span>Shadowing variable <span class="token string">\`x\`</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_8-\u663E\u5F0F\u7C7B\u578B\u7684\u53D8\u91CF\u65E0\u6CD5\u4F7F\u7528-nil-\u6765\u521D\u59CB\u5316" tabindex="-1">8. \u663E\u5F0F\u7C7B\u578B\u7684\u53D8\u91CF\u65E0\u6CD5\u4F7F\u7528 nil \u6765\u521D\u59CB\u5316 <a class="header-anchor" href="#_8-\u663E\u5F0F\u7C7B\u578B\u7684\u53D8\u91CF\u65E0\u6CD5\u4F7F\u7528-nil-\u6765\u521D\u59CB\u5316" aria-hidden="true">#</a></h3><p><code>nil</code> \u662F interface\u3001function\u3001pointer\u3001map\u3001slice \u548C channel \u7C7B\u578B\u53D8\u91CF\u7684\u9ED8\u8BA4\u521D\u59CB\u503C\u3002\u4F46\u58F0\u660E\u65F6\u4E0D\u6307\u5B9A\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u4E5F\u65E0\u6CD5\u63A8\u65AD\u51FA\u53D8\u91CF\u7684\u5177\u4F53\u7C7B\u578B\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token boolean">nil</span>    <span class="token comment">// error: use of untyped nil</span>
    <span class="token boolean">_</span> <span class="token operator">=</span> x
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
    <span class="token boolean">_</span> <span class="token operator">=</span> x
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_9-\u76F4\u63A5\u4F7F\u7528\u503C\u4E3A-nil-\u7684-slice\u3001map" tabindex="-1">9. \u76F4\u63A5\u4F7F\u7528\u503C\u4E3A nil \u7684 slice\u3001map <a class="header-anchor" href="#_9-\u76F4\u63A5\u4F7F\u7528\u503C\u4E3A-nil-\u7684-slice\u3001map" aria-hidden="true">#</a></h3><p>\u5141\u8BB8\u5BF9\u503C\u4E3A nil \u7684 slice \u6DFB\u52A0\u5143\u7D20\uFF0C\u4F46\u5BF9\u503C\u4E3A nil \u7684 map \u6DFB\u52A0\u5143\u7D20\u5219\u4F1A\u9020\u6210\u8FD0\u884C\u65F6 panic</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// map \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> m <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    m<span class="token punctuation">[</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>        <span class="token comment">// error: panic: assignment to entry in nil map</span>
    <span class="token comment">// m := make(map[string]int)// map \u7684\u6B63\u786E\u58F0\u660E\uFF0C\u5206\u914D\u4E86\u5B9E\u9645\u7684\u5185\u5B58</span>
<span class="token punctuation">}</span>

<span class="token comment">// slice \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> s <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_10-map-\u5BB9\u91CF" tabindex="-1">10. map \u5BB9\u91CF <a class="header-anchor" href="#_10-map-\u5BB9\u91CF" aria-hidden="true">#</a></h3><p>\u5728\u521B\u5EFA map \u7C7B\u578B\u7684\u53D8\u91CF\u65F6\u53EF\u4EE5\u6307\u5B9A\u5BB9\u91CF\uFF0C\u4F46\u4E0D\u80FD\u50CF slice \u4E00\u6837\u4F7F\u7528 <code>cap()</code> \u6765\u68C0\u6D4B\u5206\u914D\u7A7A\u95F4\u7684\u5927\u5C0F\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">cap</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// error: invalid argument m1 (type map[string]int) for cap</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_11-string-\u7C7B\u578B\u7684\u53D8\u91CF\u503C\u4E0D\u80FD\u4E3A-nil" tabindex="-1">11. string \u7C7B\u578B\u7684\u53D8\u91CF\u503C\u4E0D\u80FD\u4E3A nil <a class="header-anchor" href="#_11-string-\u7C7B\u578B\u7684\u53D8\u91CF\u503C\u4E0D\u80FD\u4E3A-nil" aria-hidden="true">#</a></h3><p>\u5BF9\u90A3\u4E9B\u559C\u6B22\u7528 <code>nil</code> \u521D\u59CB\u5316\u5B57\u7B26\u4E32\u7684\u4EBA\u6765\u8BF4\uFF0C\u8FD9\u5C31\u662F\u5751\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> s <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token boolean">nil</span>    <span class="token comment">// cannot use nil as type string in assignment</span>
    <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>    <span class="token comment">// invalid operation: s == nil (mismatched types string and nil)</span>
        s <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> s <span class="token builtin">string</span>    <span class="token comment">// \u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u96F6\u503C\u662F\u7A7A\u4E32 &quot;&quot;</span>
    <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
        s <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_12-array-\u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" tabindex="-1">12. Array \u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570 <a class="header-anchor" href="#_12-array-\u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" aria-hidden="true">#</a></h3><p>\u5728 C/C++ \u4E2D\uFF0C\u6570\u7EC4\uFF08\u540D\uFF09\u662F\u6307\u9488\u3002\u5C06\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u4F20\u8FDB\u51FD\u6570\u65F6\uFF0C\u76F8\u5F53\u4E8E\u4F20\u9012\u4E86\u6570\u7EC4\u5185\u5B58\u5730\u5740\u7684\u5F15\u7528\uFF0C\u5728\u51FD\u6570\u5185\u90E8\u4F1A\u6539\u53D8\u8BE5\u6570\u7EC4\u7684\u503C\u3002</p><p>\u5728 Go \u4E2D\uFF0C\u6570\u7EC4\u662F\u503C\u3002\u4F5C\u4E3A\u53C2\u6570\u4F20\u8FDB\u51FD\u6570\u65F6\uFF0C\u4F20\u9012\u7684\u662F\u6570\u7EC4\u7684\u539F\u59CB\u503C\u62F7\u8D1D\uFF0C\u6B64\u65F6\u5728\u51FD\u6570\u5185\u90E8\u662F\u65E0\u6CD5\u66F4\u65B0\u8BE5\u6570\u7EC4\u7684\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u6570\u7EC4\u4F7F\u7528\u503C\u62F7\u8D1D\u4F20\u53C2</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>

    <span class="token keyword">func</span><span class="token punctuation">(</span>arr <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>    <span class="token comment">// [7 2 3]</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>            <span class="token comment">// [1 2 3]    // \u5E76\u4E0D\u662F\u4F60\u4EE5\u4E3A\u7684 [7 2 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u679C\u60F3\u4FEE\u6539\u53C2\u6570\u6570\u7EC4\uFF1A</p><ul><li>\u76F4\u63A5\u4F20\u9012\u6307\u5411\u8FD9\u4E2A\u6570\u7EC4\u7684\u6307\u9488\u7C7B\u578B\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4F20\u5740\u4F1A\u4FEE\u6539\u539F\u6570\u636E</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>

    <span class="token keyword">func</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>arr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>    <span class="token comment">// &amp;[7 2 3]</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// [7 2 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u76F4\u63A5\u4F7F\u7528 slice\uFF1A\u5373\u4F7F\u51FD\u6570\u5185\u90E8\u5F97\u5230\u7684\u662F slice \u7684\u503C\u62F7\u8D1D\uFF0C\u4F46\u4F9D\u65E7\u4F1A\u66F4\u65B0 slice \u7684\u539F\u59CB\u6570\u636E\uFF08\u5E95\u5C42 array\uFF09</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4F1A\u4FEE\u6539 slice \u7684\u5E95\u5C42 array\uFF0C\u4ECE\u800C\u4FEE\u6539 slice</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span>arr <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// [7 2 3]</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// [7 2 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_13-range-\u904D\u5386-slice-\u548C-array-\u65F6\u6DF7\u6DC6\u4E86\u8FD4\u56DE\u503C" tabindex="-1">13. range \u904D\u5386 slice \u548C array \u65F6\u6DF7\u6DC6\u4E86\u8FD4\u56DE\u503C <a class="header-anchor" href="#_13-range-\u904D\u5386-slice-\u548C-array-\u65F6\u6DF7\u6DC6\u4E86\u8FD4\u56DE\u503C" aria-hidden="true">#</a></h3><p>\u4E0E\u5176\u4ED6\u7F16\u7A0B\u8BED\u8A00\u4E2D\u7684 <code>for-in</code> \u3001<code>foreach</code> \u904D\u5386\u8BED\u53E5\u4E0D\u540C\uFF0CGo \u4E2D\u7684 <code>range</code> \u5728\u904D\u5386\u65F6\u4F1A\u751F\u6210 2 \u4E2A\u503C\uFF0C\u7B2C\u4E00\u4E2A\u662F\u5143\u7D20\u7D22\u5F15\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u5143\u7D20\u7684\u503C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> x <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>    <span class="token comment">// 0 1 2</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> x <span class="token punctuation">{</span>    <span class="token comment">// \u4F7F\u7528 _ \u4E22\u5F03\u7D22\u5F15</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_14-slice-\u548C-array-\u5176\u5B9E\u662F\u4E00\u7EF4\u6570\u636E" tabindex="-1">14. slice \u548C array \u5176\u5B9E\u662F\u4E00\u7EF4\u6570\u636E <a class="header-anchor" href="#_14-slice-\u548C-array-\u5176\u5B9E\u662F\u4E00\u7EF4\u6570\u636E" aria-hidden="true">#</a></h3><p>\u770B\u8D77\u6765 Go \u652F\u6301\u591A\u7EF4\u7684 array \u548C slice\uFF0C\u53EF\u4EE5\u521B\u5EFA\u6570\u7EC4\u7684\u6570\u7EC4\u3001\u5207\u7247\u7684\u5207\u7247\uFF0C\u4F46\u5176\u5B9E\u5E76\u4E0D\u662F\u3002</p><p>\u5BF9\u4F9D\u8D56\u52A8\u6001\u8BA1\u7B97\u591A\u7EF4\u6570\u7EC4\u503C\u7684\u5E94\u7528\u6765\u8BF4\uFF0C\u5C31\u6027\u80FD\u548C\u590D\u6742\u5EA6\u800C\u8A00\uFF0C\u7528 Go \u5B9E\u73B0\u7684\u6548\u679C\u5E76\u4E0D\u7406\u60F3\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u539F\u59CB\u7684\u4E00\u7EF4\u6570\u7EC4\u3001\u201C\u72EC\u7ACB\u201C \u7684\u5207\u7247\u3001\u201C\u5171\u4EAB\u5E95\u5C42\u6570\u7EC4\u201D\u7684\u5207\u7247\u6765\u521B\u5EFA\u52A8\u6001\u7684\u591A\u7EF4\u6570\u7EC4\u3002</p><ol><li>\u4F7F\u7528\u539F\u59CB\u7684\u4E00\u7EF4\u6570\u7EC4\uFF1A\u8981\u505A\u597D\u7D22\u5F15\u68C0\u67E5\u3001\u6EA2\u51FA\u68C0\u6D4B\u3001\u4EE5\u53CA\u5F53\u6570\u7EC4\u6EE1\u65F6\u518D\u6DFB\u52A0\u503C\u65F6\u8981\u91CD\u65B0\u505A\u5185\u5B58\u5206\u914D\u3002</li><li>\u4F7F\u7528\u201C\u72EC\u7ACB\u201D\u7684\u5207\u7247\u5206\u4E24\u6B65\uFF1A</li></ol><ul><li><p>\u521B\u5EFA\u5916\u90E8 slice</p></li><li><p>\u5BF9\u6BCF\u4E2A\u5185\u90E8 slice \u8FDB\u884C\u5185\u5B58\u5206\u914D \u6CE8\u610F\u5185\u90E8\u7684 slice \u76F8\u4E92\u72EC\u7ACB\uFF0C\u4F7F\u5F97\u4EFB\u4E00\u5185\u90E8 slice \u589E\u7F29\u90FD\u4E0D\u4F1A\u5F71\u54CD\u5230\u5176\u4ED6\u7684 slice</p></li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528\u5404\u81EA\u72EC\u7ACB\u7684 6 \u4E2A slice \u6765\u521B\u5EFA [2][3] \u7684\u52A8\u6001\u591A\u7EF4\u6570\u7EC4</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token number">2</span>
    y <span class="token operator">:=</span> <span class="token number">4</span>

    table <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i  <span class="token operator">:=</span> <span class="token keyword">range</span> table <span class="token punctuation">{</span>
        table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol><li>\u4F7F\u7528\u201C\u5171\u4EAB\u5E95\u5C42\u6570\u7EC4\u201D\u7684\u5207\u7247</li></ol><ul><li><p>\u521B\u5EFA\u4E00\u4E2A\u5B58\u653E\u539F\u59CB\u6570\u636E\u7684\u5BB9\u5668 slice</p></li><li><p>\u521B\u5EFA\u5176\u4ED6\u7684 slice</p></li><li><p>\u5207\u5272\u539F\u59CB slice \u6765\u521D\u59CB\u5316\u5176\u4ED6\u7684 slice</p></li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    h<span class="token punctuation">,</span> w <span class="token operator">:=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span>
    raw <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> h<span class="token operator">*</span>w<span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> raw <span class="token punctuation">{</span>
        raw<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521D\u59CB\u5316\u539F\u59CB slice</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>raw<span class="token punctuation">,</span> <span class="token operator">&amp;</span>raw<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// [0 1 2 3 4 5 6 7] 0xc420012120</span>

    table <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> table <span class="token punctuation">{</span>

        <span class="token comment">// \u7B49\u95F4\u8DDD\u5207\u5272\u539F\u59CB slice\uFF0C\u521B\u5EFA\u52A8\u6001\u591A\u7EF4\u6570\u7EC4 table</span>
        <span class="token comment">// 0: raw[0*4: 0*4 + 4]</span>
        <span class="token comment">// 1: raw[1*4: 1*4 + 4]</span>
        table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> raw<span class="token punctuation">[</span>i<span class="token operator">*</span>w <span class="token punctuation">:</span> i<span class="token operator">*</span>w <span class="token operator">+</span> w<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> <span class="token operator">&amp;</span>table<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// [[0 1 2 3] [4 5 6 7]] 0xc420012120</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u66F4\u591A\u5173\u4E8E\u591A\u7EF4\u6570\u7EC4\u7684\u53C2\u8003</p><p><a href="https://stackoverflow.com/questions/39561140/go-how-is-two-dimensional-arrays-memory-representation" target="_blank" rel="noopener noreferrer">go-how-is-two-dimensional-arrays-memory-representation</a></p><p><a href="https://stackoverflow.com/questions/39804861/what-is-a-concise-way-to-create-a-2d-slice-in-go" target="_blank" rel="noopener noreferrer">what-is-a-concise-way-to-create-a-2d-slice-in-go</a></p><h3 id="_15-\u8BBF\u95EE-map-\u4E2D\u4E0D\u5B58\u5728\u7684-key" tabindex="-1">15. \u8BBF\u95EE map \u4E2D\u4E0D\u5B58\u5728\u7684 key <a class="header-anchor" href="#_15-\u8BBF\u95EE-map-\u4E2D\u4E0D\u5B58\u5728\u7684-key" aria-hidden="true">#</a></h3><p>\u548C\u5176\u4ED6\u7F16\u7A0B\u8BED\u8A00\u7C7B\u4F3C\uFF0C\u5982\u679C\u8BBF\u95EE\u4E86 map \u4E2D\u4E0D\u5B58\u5728\u7684 key \u5219\u5E0C\u671B\u80FD\u8FD4\u56DE nil\uFF0C\u6BD4\u5982\u5728 PHP \u4E2D\uFF1A</p><div class="language-"><pre><code>&gt; php -r &#39;$v = [&quot;x&quot;=&gt;1, &quot;y&quot;=&gt;2]; @var_dump($v[&quot;z&quot;]);&#39;
NULL
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Go \u5219\u4F1A\u8FD4\u56DE\u5143\u7D20\u5BF9\u5E94\u6570\u636E\u7C7B\u578B\u7684\u96F6\u503C\uFF0C\u6BD4\u5982 <code>nil</code>\u3001<code>&#39;&#39;</code> \u3001<code>false</code> \u548C 0\uFF0C\u53D6\u503C\u64CD\u4F5C\u603B\u6709\u503C\u8FD4\u56DE\uFF0C\u6545\u4E0D\u80FD\u901A\u8FC7\u53D6\u51FA\u6765\u7684\u503C\u6765\u5224\u65AD key \u662F\u4E0D\u662F\u5728 map \u4E2D\u3002</p><p>\u68C0\u67E5 key \u662F\u5426\u5B58\u5728\u53EF\u4EE5\u7528 map \u76F4\u63A5\u8BBF\u95EE\uFF0C\u68C0\u67E5\u8FD4\u56DE\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5373\u53EF\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u7684 key \u68C0\u6D4B\u65B9\u5F0F</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> v <span class="token operator">:=</span> x<span class="token punctuation">[</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> v <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;key two is no entry&quot;</span><span class="token punctuation">)</span>    <span class="token comment">// \u952E two \u5B58\u4E0D\u5B58\u5728\u90FD\u4F1A\u8FD4\u56DE\u7684\u7A7A\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> x<span class="token punctuation">[</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;key two is no entry&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_16-string-\u7C7B\u578B\u7684\u503C\u662F\u5E38\u91CF\uFF0C\u4E0D\u53EF\u66F4\u6539" tabindex="-1">16. string \u7C7B\u578B\u7684\u503C\u662F\u5E38\u91CF\uFF0C\u4E0D\u53EF\u66F4\u6539 <a class="header-anchor" href="#_16-string-\u7C7B\u578B\u7684\u503C\u662F\u5E38\u91CF\uFF0C\u4E0D\u53EF\u66F4\u6539" aria-hidden="true">#</a></h3><p>\u5C1D\u8BD5\u4F7F\u7528\u7D22\u5F15\u904D\u5386\u5B57\u7B26\u4E32\uFF0C\u6765\u66F4\u65B0\u5B57\u7B26\u4E32\u4E2D\u7684\u4E2A\u522B\u5B57\u7B26\uFF0C\u662F\u4E0D\u5141\u8BB8\u7684\u3002</p><p>string \u7C7B\u578B\u7684\u503C\u662F\u53EA\u8BFB\u7684\u4E8C\u8FDB\u5236 byte slice\uFF0C\u5982\u679C\u771F\u8981\u4FEE\u6539\u5B57\u7B26\u4E32\u4E2D\u7684\u5B57\u7B26\uFF0C\u5C06 string \u8F6C\u4E3A []byte \u4FEE\u6539\u540E\uFF0C\u518D\u8F6C\u4E3A string \u5373\u53EF\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4FEE\u6539\u5B57\u7B26\u4E32\u7684\u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token string">&quot;text&quot;</span>
    x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;T&quot;</span>        <span class="token comment">// error: cannot assign to x[0]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4FEE\u6539\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token string">&quot;text&quot;</span>
    xBytes <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    xBytes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;T&#39;</span>    <span class="token comment">// \u6CE8\u610F\u6B64\u65F6\u7684 T \u662F rune \u7C7B\u578B</span>
    x <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>xBytes<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// Text</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>\u6CE8\u610F\uFF1A</strong> \u4E0A\u8FB9\u7684\u793A\u4F8B\u5E76\u4E0D\u662F\u66F4\u65B0\u5B57\u7B26\u4E32\u7684\u6B63\u786E\u59FF\u52BF\uFF0C\u56E0\u4E3A\u4E00\u4E2A UTF8 \u7F16\u7801\u7684\u5B57\u7B26\u53EF\u80FD\u4F1A\u5360\u591A\u4E2A\u5B57\u8282\uFF0C\u6BD4\u5982\u6C49\u5B57\u5C31\u9700\u8981 3~4 \u4E2A\u5B57\u8282\u6765\u5B58\u50A8\uFF0C\u6B64\u65F6\u66F4\u65B0\u5176\u4E2D\u7684\u4E00\u4E2A\u5B57\u8282\u662F\u9519\u8BEF\u7684\u3002</p><p>\u66F4\u65B0\u5B57\u4E32\u7684\u6B63\u786E\u59FF\u52BF\uFF1A\u5C06 string \u8F6C\u4E3A rune slice\uFF08\u6B64\u65F6 1 \u4E2A rune \u53EF\u80FD\u5360\u591A\u4E2A byte\uFF09\uFF0C\u76F4\u63A5\u66F4\u65B0 rune \u4E2D\u7684\u5B57\u7B26</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token string">&quot;text&quot;</span>
    xRunes <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    xRunes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\u6211&#39;</span>
    x <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>xRunes<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// \u6211ext</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_17-string-\u4E0E-byte-slice-\u4E4B\u95F4\u7684\u8F6C\u6362" tabindex="-1">17. string \u4E0E byte slice \u4E4B\u95F4\u7684\u8F6C\u6362 <a class="header-anchor" href="#_17-string-\u4E0E-byte-slice-\u4E4B\u95F4\u7684\u8F6C\u6362" aria-hidden="true">#</a></h3><p>\u5F53\u8FDB\u884C string \u548C byte slice \u76F8\u4E92\u8F6C\u6362\u65F6\uFF0C\u53C2\u4E0E\u8F6C\u6362\u7684\u662F\u62F7\u8D1D\u7684\u539F\u59CB\u503C\u3002\u8FD9\u79CD\u8F6C\u6362\u7684\u8FC7\u7A0B\uFF0C\u4E0E\u5176\u4ED6\u7F16\u7A0B\u8BED\u7684\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u64CD\u4F5C\u4E0D\u540C\uFF0C\u4E5F\u548C\u65B0 slice \u4E0E\u65E7 slice \u5171\u4EAB\u5E95\u5C42\u6570\u7EC4\u4E0D\u540C\u3002</p><p>Go \u5728 string \u4E0E byte slice \u76F8\u4E92\u8F6C\u6362\u4E0A\u4F18\u5316\u4E86\u4E24\u70B9\uFF0C\u907F\u514D\u4E86\u989D\u5916\u7684\u5185\u5B58\u5206\u914D\uFF1A</p><ul><li>\u5728 <code>map[string]</code> \u4E2D\u67E5\u627E key \u65F6\uFF0C\u4F7F\u7528\u4E86\u5BF9\u5E94\u7684 <code>[]byte</code>\uFF0C\u907F\u514D\u505A <code>m[string(key)]</code> \u7684\u5185\u5B58\u5206\u914D</li><li>\u4F7F\u7528 <code>for range</code> \u8FED\u4EE3 string \u8F6C\u6362\u4E3A []byte \u7684\u8FED\u4EE3\uFF1A<code>for i,v := range []byte(str) {...}</code></li></ul><p>\u96FE\uFF1A<a href="http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/index.html#string_byte_slice_conv" target="_blank" rel="noopener noreferrer">\u53C2\u8003\u539F\u6587</a></p><h3 id="_18-string-\u4E0E\u7D22\u5F15\u64CD\u4F5C\u7B26" tabindex="-1">18. string \u4E0E\u7D22\u5F15\u64CD\u4F5C\u7B26 <a class="header-anchor" href="#_18-string-\u4E0E\u7D22\u5F15\u64CD\u4F5C\u7B26" aria-hidden="true">#</a></h3><p>\u5BF9\u5B57\u7B26\u4E32\u7528\u7D22\u5F15\u8BBF\u95EE\u8FD4\u56DE\u7684\u4E0D\u662F\u5B57\u7B26\uFF0C\u800C\u662F\u4E00\u4E2A byte \u503C\u3002</p><p>\u8FD9\u79CD\u5904\u7406\u65B9\u5F0F\u548C\u5176\u4ED6\u8BED\u8A00\u4E00\u6837\uFF0C\u6BD4\u5982 PHP \u4E2D\uFF1A</p><div class="language-php line-numbers-mode"><pre><code><span class="token operator">&gt;</span> php <span class="token operator">-</span>r <span class="token string single-quoted-string">&#39;$name=&quot;\u4E2D\u6587&quot;; var_dump($name);&#39;</span>    <span class="token comment"># &quot;\u4E2D\u6587&quot; \u5360\u7528 6 \u4E2A\u5B57\u8282</span>
<span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">&quot;\u4E2D\u6587&quot;</span>

<span class="token operator">&gt;</span> php <span class="token operator">-</span>r <span class="token string single-quoted-string">&#39;$name=&quot;\u4E2D\u6587&quot;; var_dump($name[0]);&#39;</span> <span class="token comment"># \u628A\u7B2C\u4E00\u4E2A\u5B57\u8282\u5F53\u505A Unicode \u5B57\u7B26\u8BFB\u53D6\uFF0C\u663E\u793A U+FFFD</span>
<span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">&quot;\uFFFD&quot;</span>

<span class="token operator">&gt;</span> php <span class="token operator">-</span>r <span class="token string single-quoted-string">&#39;$name=&quot;\u4E2D\u6587&quot;; var_dump($name[0].$name[1].$name[2]);&#39;</span>
<span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">&quot;\u4E2D&quot;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token string">&quot;ascii&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">// 97</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// uint8</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C\u9700\u8981\u4F7F\u7528 <code>for range</code> \u8FED\u4EE3\u8BBF\u95EE\u5B57\u7B26\u4E32\u4E2D\u7684\u5B57\u7B26\uFF08unicode code point / rune\uFF09\uFF0C\u6807\u51C6\u5E93\u4E2D\u6709 <code>&quot;unicode/utf8&quot;</code> \u5305\u6765\u505A UTF8 \u7684\u76F8\u5173\u89E3\u7801\u7F16\u7801\u3002\u53E6\u5916 <a href="https://godoc.org/golang.org/x/exp/utf8string" target="_blank" rel="noopener noreferrer">utf8string</a> \u4E5F\u6709\u50CF <code>func (s *String) At(i int) rune</code> \u7B49\u5F88\u65B9\u4FBF\u7684\u5E93\u51FD\u6570\u3002</p><h3 id="_19-\u5B57\u7B26\u4E32\u5E76\u4E0D\u90FD\u662F-utf8-\u6587\u672C" tabindex="-1">19. \u5B57\u7B26\u4E32\u5E76\u4E0D\u90FD\u662F UTF8 \u6587\u672C <a class="header-anchor" href="#_19-\u5B57\u7B26\u4E32\u5E76\u4E0D\u90FD\u662F-utf8-\u6587\u672C" aria-hidden="true">#</a></h3><p>string \u7684\u503C\u4E0D\u5FC5\u662F UTF8 \u6587\u672C\uFF0C\u53EF\u4EE5\u5305\u542B\u4EFB\u610F\u7684\u503C\u3002\u53EA\u6709\u5B57\u7B26\u4E32\u662F\u6587\u5B57\u5B57\u9762\u503C\u65F6\u624D\u662F UTF8 \u6587\u672C\uFF0C\u5B57\u4E32\u53EF\u4EE5\u901A\u8FC7\u8F6C\u4E49\u6765\u5305\u542B\u5176\u4ED6\u6570\u636E\u3002</p><p>\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u662F UTF8 \u6587\u672C\uFF0C\u53EF\u4F7F\u7528 &quot;unicode/utf8&quot; \u5305\u4E2D\u7684 <code>ValidString()</code> \u51FD\u6570\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str1 <span class="token operator">:=</span> <span class="token string">&quot;ABC&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">ValidString</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>

    str2 <span class="token operator">:=</span> <span class="token string">&quot;A\\xfeC&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">ValidString</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>

    str3 <span class="token operator">:=</span> <span class="token string">&quot;A\\\\xfeC&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">ValidString</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true    // \u628A\u8F6C\u4E49\u5B57\u7B26\u8F6C\u4E49\u6210\u5B57\u9762\u503C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_20-\u5B57\u7B26\u4E32\u7684\u957F\u5EA6" tabindex="-1">20. \u5B57\u7B26\u4E32\u7684\u957F\u5EA6 <a class="header-anchor" href="#_20-\u5B57\u7B26\u4E32\u7684\u957F\u5EA6" aria-hidden="true">#</a></h3><p>\u5728 Python \u4E2D\uFF1A</p><div class="language-Python line-numbers-mode"><pre><code>data <span class="token operator">=</span> <span class="token string">u&#39;\u2665&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7136\u800C\u5728 Go \u4E2D\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    char <span class="token operator">:=</span> <span class="token string">&quot;\u2665&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Go \u7684\u5185\u5EFA\u51FD\u6570 <code>len()</code> \u8FD4\u56DE\u7684\u662F\u5B57\u7B26\u4E32\u7684 byte \u6570\u91CF\uFF0C\u800C\u4E0D\u662F\u50CF Python \u4E2D\u90A3\u6837\u662F\u8BA1\u7B97 Unicode \u5B57\u7B26\u6570\u3002</p><p>\u5982\u679C\u8981\u5F97\u5230\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u6570\uFF0C\u53EF\u4F7F\u7528 &quot;unicode/utf8&quot; \u5305\u4E2D\u7684 <code>RuneCountInString(str string) (n int)</code></p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    char <span class="token operator">:=</span> <span class="token string">&quot;\u2665&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">RuneCountInString</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>\u6CE8\u610F\uFF1A</strong><code>RuneCountInString</code> \u5E76\u4E0D\u603B\u662F\u8FD4\u56DE\u6211\u4EEC\u770B\u5230\u7684\u5B57\u7B26\u6570\uFF0C\u56E0\u4E3A\u6709\u7684\u5B57\u7B26\u4F1A\u5360\u7528 2 \u4E2A rune\uFF1A</p><div class="language-"><pre><code>func main() {
    char := &quot;\xE9&quot;
    fmt.Println(len(char))    // 3
    fmt.Println(utf8.RuneCountInString(char))    // 2
    fmt.Println(&quot;cafe\\u0301&quot;)    // caf\xE9    // \u6CD5\u6587\u7684 cafe\uFF0C\u5B9E\u9645\u4E0A\u662F\u4E24\u4E2A rune \u7684\u7EC4\u5408
}
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u53C2\u8003\uFF1A<a href="https://blog.golang.org/normalization" target="_blank" rel="noopener noreferrer">normalization</a></p><h3 id="_21-\u5728\u591A\u884C-array\u3001slice\u3001map-\u8BED\u53E5\u4E2D\u7F3A\u5C11-\u53F7" tabindex="-1">21. \u5728\u591A\u884C array\u3001slice\u3001map \u8BED\u53E5\u4E2D\u7F3A\u5C11 <code>,</code> \u53F7 <a class="header-anchor" href="#_21-\u5728\u591A\u884C-array\u3001slice\u3001map-\u8BED\u53E5\u4E2D\u7F3A\u5C11-\u53F7" aria-hidden="true">#</a></h3><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
        <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token number">2</span>    <span class="token comment">// syntax error: unexpected newline, expecting comma or }</span>
    <span class="token punctuation">}</span>
    y <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">}</span>
    z <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u58F0\u660E\u8BED\u53E5\u4E2D <code>}</code> \u6298\u53E0\u5230\u5355\u884C\u540E\uFF0C\u5C3E\u90E8\u7684 <code>,</code> \u4E0D\u662F\u5FC5\u9700\u7684\u3002</p><h3 id="_22-log-fatal-\u548C-log-panic-\u4E0D\u53EA\u662F-log" tabindex="-1">22. <code>log.Fatal</code> \u548C <code>log.Panic</code> \u4E0D\u53EA\u662F log <a class="header-anchor" href="#_22-log-fatal-\u548C-log-panic-\u4E0D\u53EA\u662F-log" aria-hidden="true">#</a></h3><p>log \u6807\u51C6\u5E93\u63D0\u4F9B\u4E86\u4E0D\u540C\u7684\u65E5\u5FD7\u8BB0\u5F55\u7B49\u7EA7\uFF0C\u4E0E\u5176\u4ED6\u8BED\u8A00\u7684\u65E5\u5FD7\u5E93\u4E0D\u540C\uFF0CGo \u7684 log \u5305\u5728\u8C03\u7528 <code>Fatal*()</code>\u3001<code>Panic*()</code> \u65F6\u80FD\u505A\u66F4\u591A\u65E5\u5FD7\u5916\u7684\u4E8B\uFF0C\u5982\u4E2D\u65AD\u7A0B\u5E8F\u7684\u6267\u884C\u7B49\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;Fatal level log: log entry&quot;</span><span class="token punctuation">)</span>        <span class="token comment">// \u8F93\u51FA\u4FE1\u606F\u540E\uFF0C\u7A0B\u5E8F\u7EC8\u6B62\u6267\u884C</span>
    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Nomal level log: log entry&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_23-\u5BF9\u5185\u5EFA\u6570\u636E\u7ED3\u6784\u7684\u64CD\u4F5C\u5E76\u4E0D\u662F\u540C\u6B65\u7684" tabindex="-1">23. \u5BF9\u5185\u5EFA\u6570\u636E\u7ED3\u6784\u7684\u64CD\u4F5C\u5E76\u4E0D\u662F\u540C\u6B65\u7684 <a class="header-anchor" href="#_23-\u5BF9\u5185\u5EFA\u6570\u636E\u7ED3\u6784\u7684\u64CD\u4F5C\u5E76\u4E0D\u662F\u540C\u6B65\u7684" aria-hidden="true">#</a></h3><p>\u5C3D\u7BA1 Go \u672C\u8EAB\u6709\u5927\u91CF\u7684\u7279\u6027\u6765\u652F\u6301\u5E76\u53D1\uFF0C\u4F46\u5E76\u4E0D\u4FDD\u8BC1\u5E76\u53D1\u7684\u6570\u636E\u5B89\u5168\uFF0C\u7528\u6237\u9700\u81EA\u5DF1\u4FDD\u8BC1\u53D8\u91CF\u7B49\u6570\u636E\u4EE5\u539F\u5B50\u64CD\u4F5C\u66F4\u65B0\u3002</p><p>goroutine \u548C channel \u662F\u8FDB\u884C\u539F\u5B50\u64CD\u4F5C\u7684\u597D\u65B9\u6CD5\uFF0C\u6216\u4F7F\u7528 &quot;sync&quot; \u5305\u4E2D\u7684\u9501\u3002</p><h3 id="_24-range-\u8FED\u4EE3-string-\u5F97\u5230\u7684\u503C" tabindex="-1">24. range \u8FED\u4EE3 string \u5F97\u5230\u7684\u503C <a class="header-anchor" href="#_24-range-\u8FED\u4EE3-string-\u5F97\u5230\u7684\u503C" aria-hidden="true">#</a></h3><p>range \u5F97\u5230\u7684\u7D22\u5F15\u662F\u5B57\u7B26\u503C\uFF08Unicode point / rune\uFF09\u7B2C\u4E00\u4E2A\u5B57\u8282\u7684\u4F4D\u7F6E\uFF0C\u4E0E\u5176\u4ED6\u7F16\u7A0B\u8BED\u8A00\u4E0D\u540C\uFF0C\u8FD9\u4E2A\u7D22\u5F15\u5E76\u4E0D\u76F4\u63A5\u662F\u5B57\u7B26\u5728\u5B57\u7B26\u4E32\u4E2D\u7684\u4F4D\u7F6E\u3002</p><p>\u6CE8\u610F\u4E00\u4E2A\u5B57\u7B26\u53EF\u80FD\u5360\u591A\u4E2A rune\uFF0C\u6BD4\u5982\u6CD5\u6587\u5355\u8BCD caf\xE9 \u4E2D\u7684 \xE9\u3002\u64CD\u4F5C\u7279\u6B8A\u5B57\u7B26\u53EF\u4F7F\u7528<a href="https://golang.org/pkg/vendor/golang_org/x/text/unicode/norm/" target="_blank" rel="noopener noreferrer">norm</a> \u5305\u3002</p><p>for range \u8FED\u4EE3\u4F1A\u5C1D\u8BD5\u5C06 string \u7FFB\u8BD1\u4E3A UTF8 \u6587\u672C\uFF0C\u5BF9\u4EFB\u4F55\u65E0\u6548\u7684\u7801\u70B9\u90FD\u76F4\u63A5\u4F7F\u7528 0XFFFD rune\uFF08\uFFFD\uFF09UNicode \u66FF\u4EE3\u5B57\u7B26\u6765\u8868\u793A\u3002\u5982\u679C string \u4E2D\u6709\u4EFB\u4F55\u975E UTF8 \u7684\u6570\u636E\uFF0C\u5E94\u5C06 string \u4FDD\u5B58\u4E3A byte slice \u518D\u8FDB\u884C\u64CD\u4F5C\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token string">&quot;A\\xfe\\x02\\xff\\x04&quot;</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#x &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>    <span class="token comment">// 0x41 0xfffd 0x2 0xfffd 0x4    // \u9519\u8BEF</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#x &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>    <span class="token comment">// 0x41 0xfe 0x2 0xff 0x4    // \u6B63\u786E</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_25-range-\u8FED\u4EE3-map" tabindex="-1">25. range \u8FED\u4EE3 map <a class="header-anchor" href="#_25-range-\u8FED\u4EE3-map" aria-hidden="true">#</a></h3><p>\u5982\u679C\u4F60\u5E0C\u671B\u4EE5\u7279\u5B9A\u7684\u987A\u5E8F\uFF08\u5982\u6309 key \u6392\u5E8F\uFF09\u6765\u8FED\u4EE3 map\uFF0C\u8981\u6CE8\u610F\u6BCF\u6B21\u8FED\u4EE3\u90FD\u53EF\u80FD\u4EA7\u751F\u4E0D\u4E00\u6837\u7684\u7ED3\u679C\u3002</p><p>Go \u7684\u8FD0\u884C\u65F6\u662F\u6709\u610F\u6253\u4E71\u8FED\u4EE3\u987A\u5E8F\u7684\uFF0C\u6240\u4EE5\u4F60\u5F97\u5230\u7684\u8FED\u4EE3\u7ED3\u679C\u53EF\u80FD\u4E0D\u4E00\u81F4\u3002\u4F46\u4E5F\u5E76\u4E0D\u603B\u4F1A\u6253\u4E71\uFF0C\u5F97\u5230\u8FDE\u7EED\u76F8\u540C\u7684 5 \u4E2A\u8FED\u4EE3\u7ED3\u679C\u4E5F\u662F\u53EF\u80FD\u7684\uFF0C\u5982\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;four&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> m <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5982\u679C\u4F60\u53BB <a href="https://play.golang.org/" target="_blank" rel="noopener noreferrer">Go Playground</a> \u91CD\u590D\u8FD0\u884C\u4E0A\u8FB9\u7684\u4EE3\u7801\uFF0C\u8F93\u51FA\u662F\u4E0D\u4F1A\u53D8\u7684\uFF0C\u53EA\u6709\u4F60\u66F4\u65B0\u4EE3\u7801\u5B83\u624D\u4F1A\u91CD\u65B0\u7F16\u8BD1\u3002\u91CD\u65B0\u7F16\u8BD1\u540E\u8FED\u4EE3\u987A\u5E8F\u662F\u88AB\u6253\u4E71\u7684\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079494-de9e6a55-0bd7-4d37-9cf8-4edc3c9ee978.png" alt="img"></p><h3 id="_26-switch-\u4E2D\u7684-fallthrough-\u8BED\u53E5" tabindex="-1">26. switch \u4E2D\u7684 fallthrough \u8BED\u53E5 <a class="header-anchor" href="#_26-switch-\u4E2D\u7684-fallthrough-\u8BED\u53E5" aria-hidden="true">#</a></h3><p><code>switch</code> \u8BED\u53E5\u4E2D\u7684 <code>case</code> \u4EE3\u7801\u5757\u4F1A\u9ED8\u8BA4\u5E26\u4E0A break\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528 <code>fallthrough</code> \u6765\u5F3A\u5236\u6267\u884C\u4E0B\u4E00\u4E2A case \u4EE3\u7801\u5757\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isSpace <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>char <span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> char <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">:</span>    <span class="token comment">// \u7A7A\u683C\u7B26\u4F1A\u76F4\u63A5 break\uFF0C\u8FD4\u56DE false // \u548C\u5176\u4ED6\u8BED\u8A00\u4E0D\u4E00\u6837</span>
        <span class="token comment">// fallthrough    // \u8FD4\u56DE true</span>
        <span class="token keyword">case</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">isSpace</span><span class="token punctuation">(</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">isSpace</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E0D\u8FC7\u4F60\u53EF\u4EE5\u5728 case \u4EE3\u7801\u5757\u672B\u5C3E\u4F7F\u7528 <code>fallthrough</code>\uFF0C\u5F3A\u5236\u6267\u884C\u4E0B\u4E00\u4E2A case \u4EE3\u7801\u5757\u3002</p><p>\u4E5F\u53EF\u4EE5\u6539\u5199 case \u4E3A\u591A\u6761\u4EF6\u5224\u65AD\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isSpace <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>char <span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> char <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">isSpace</span><span class="token punctuation">(</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">isSpace</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_27-\u81EA\u589E\u548C\u81EA\u51CF\u8FD0\u7B97" tabindex="-1">27. \u81EA\u589E\u548C\u81EA\u51CF\u8FD0\u7B97 <a class="header-anchor" href="#_27-\u81EA\u589E\u548C\u81EA\u51CF\u8FD0\u7B97" aria-hidden="true">#</a></h3><p>\u5F88\u591A\u7F16\u7A0B\u8BED\u8A00\u90FD\u81EA\u5E26\u524D\u7F6E\u540E\u7F6E\u7684 <code>++</code>\u3001<code>--</code> \u8FD0\u7B97\u3002\u4F46 Go \u7279\u7ACB\u72EC\u884C\uFF0C\u53BB\u6389\u4E86\u524D\u7F6E\u64CD\u4F5C\uFF0C\u540C\u65F6 <code>++</code>\u3001<code>\u2014</code> \u53EA\u4F5C\u4E3A\u8FD0\u7B97\u7B26\u800C\u975E\u8868\u8FBE\u5F0F\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    i <span class="token operator">:=</span> <span class="token number">0</span>
    <span class="token operator">++</span>i            <span class="token comment">// syntax error: unexpected ++, expecting }</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// syntax error: unexpected ++, expecting :</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    i <span class="token operator">:=</span> <span class="token number">0</span>
    i<span class="token operator">++</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_28-\u6309\u4F4D\u53D6\u53CD" tabindex="-1">28. \u6309\u4F4D\u53D6\u53CD <a class="header-anchor" href="#_28-\u6309\u4F4D\u53D6\u53CD" aria-hidden="true">#</a></h3><p>\u5F88\u591A\u7F16\u7A0B\u8BED\u8A00\u4F7F\u7528 <code>~</code> \u4F5C\u4E3A\u4E00\u5143\u6309\u4F4D\u53D6\u53CD\uFF08NOT\uFF09\u64CD\u4F5C\u7B26\uFF0CGo \u91CD\u7528 <code>^</code> XOR \u64CD\u4F5C\u7B26\u6765\u6309\u4F4D\u53D6\u53CD\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u7684\u53D6\u53CD\u64CD\u4F5C</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>~<span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment">// bitwise complement operator is ^</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> d <span class="token builtin">uint8</span> <span class="token operator">=</span> <span class="token number">2</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>        <span class="token comment">// 00000010</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">^</span>d<span class="token punctuation">)</span>    <span class="token comment">// 11111101</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u540C\u65F6 <code>^</code> \u4E5F\u662F\u6309\u4F4D\u5F02\u6216\uFF08XOR\uFF09\u64CD\u4F5C\u7B26\u3002</p><p>\u4E00\u4E2A\u64CD\u4F5C\u7B26\u80FD\u91CD\u7528\u4E24\u6B21\uFF0C\u662F\u56E0\u4E3A\u4E00\u5143\u7684 NOT \u64CD\u4F5C <code>NOT 0x02</code>\uFF0C\u4E0E\u4E8C\u5143\u7684 XOR \u64CD\u4F5C <code>0x22 XOR 0xff</code> \u662F\u4E00\u81F4\u7684\u3002</p><p>Go \u4E5F\u6709\u7279\u6B8A\u7684\u64CD\u4F5C\u7B26 AND NOT <code>&amp;^</code> \u64CD\u4F5C\u7B26\uFF0C\u4E0D\u540C\u4F4D\u624D\u53D6 1\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a <span class="token builtin">uint8</span> <span class="token operator">=</span> <span class="token number">0x82</span>
    <span class="token keyword">var</span> b <span class="token builtin">uint8</span> <span class="token operator">=</span> <span class="token number">0x02</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b [A]\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b [B]\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b (NOT B)\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">^</span>b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b ^ %08b = %08b [B XOR 0xff]\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">,</span> b<span class="token operator">^</span><span class="token number">0xff</span><span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b ^ %08b = %08b [A XOR B]\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token operator">^</span>b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b &amp; %08b = %08b [A AND B]\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b &amp;^%08b = %08b [A &#39;AND NOT&#39; B]\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token operator">&amp;^</span>b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%08b&amp;(^%08b)= %08b [A AND (NOT B)]\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-go line-numbers-mode"><pre><code><span class="token number">10000010</span> <span class="token punctuation">[</span>A<span class="token punctuation">]</span>
<span class="token number">00000010</span> <span class="token punctuation">[</span>B<span class="token punctuation">]</span>
<span class="token number">11111101</span> <span class="token punctuation">(</span>NOT B<span class="token punctuation">)</span>
<span class="token number">00000010</span> <span class="token operator">^</span> <span class="token number">11111111</span> <span class="token operator">=</span> <span class="token number">11111101</span> <span class="token punctuation">[</span>B XOR <span class="token number">0xff</span><span class="token punctuation">]</span>
<span class="token number">10000010</span> <span class="token operator">^</span> <span class="token number">00000010</span> <span class="token operator">=</span> <span class="token number">10000000</span> <span class="token punctuation">[</span>A XOR B<span class="token punctuation">]</span>
<span class="token number">10000010</span> <span class="token operator">&amp;</span> <span class="token number">00000010</span> <span class="token operator">=</span> <span class="token number">00000010</span> <span class="token punctuation">[</span>A AND B<span class="token punctuation">]</span>
<span class="token number">10000010</span> <span class="token operator">&amp;^</span><span class="token number">00000010</span> <span class="token operator">=</span> <span class="token number">10000000</span> <span class="token punctuation">[</span>A <span class="token string">&#39;AND NOT&#39;</span> B<span class="token punctuation">]</span>
<span class="token number">10000010</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token operator">^</span><span class="token number">00000010</span><span class="token punctuation">)</span><span class="token operator">=</span> <span class="token number">10000000</span> <span class="token punctuation">[</span>A AND <span class="token punctuation">(</span>NOT B<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_29-\u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7" tabindex="-1">29. \u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7 <a class="header-anchor" href="#_29-\u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7" aria-hidden="true">#</a></h3><p>\u9664\u4E86\u4F4D\u6E05\u9664\uFF08bit clear\uFF09\u64CD\u4F5C\u7B26\uFF0CGo \u4E5F\u6709\u5F88\u591A\u548C\u5176\u4ED6\u8BED\u8A00\u4E00\u6837\u7684\u4F4D\u64CD\u4F5C\u7B26\uFF0C\u4F46\u4F18\u5148\u7EA7\u53E6\u5F53\u522B\u8BBA\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;0x2 &amp; 0x2 + 0x4 -&gt; %#x\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token operator">&amp;</span><span class="token number">0x2</span><span class="token operator">+</span><span class="token number">0x4</span><span class="token punctuation">)</span>    <span class="token comment">// &amp; \u4F18\u5148 +</span>
    <span class="token comment">//prints: 0x2 &amp; 0x2 + 0x4 -&gt; 0x6</span>
    <span class="token comment">//Go:    (0x2 &amp; 0x2) + 0x4</span>
    <span class="token comment">//C++:    0x2 &amp; (0x2 + 0x4) -&gt; 0x2</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;0x2 + 0x2 &lt;&lt; 0x1 -&gt; %#x\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token operator">+</span><span class="token number">0x2</span><span class="token operator">&lt;&lt;</span><span class="token number">0x1</span><span class="token punctuation">)</span>    <span class="token comment">// &lt;&lt; \u4F18\u5148 +</span>
    <span class="token comment">//prints: 0x2 + 0x2 &lt;&lt; 0x1 -&gt; 0x6</span>
    <span class="token comment">//Go:     0x2 + (0x2 &lt;&lt; 0x1)</span>
    <span class="token comment">//C++:   (0x2 + 0x2) &lt;&lt; 0x1 -&gt; 0x8</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;0xf | 0x2 ^ 0x2 -&gt; %#x\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">0xf</span><span class="token operator">|</span><span class="token number">0x2</span><span class="token operator">^</span><span class="token number">0x2</span><span class="token punctuation">)</span>    <span class="token comment">// | \u4F18\u5148 ^</span>
    <span class="token comment">//prints: 0xf | 0x2 ^ 0x2 -&gt; 0xd</span>
    <span class="token comment">//Go:    (0xf | 0x2) ^ 0x2</span>
    <span class="token comment">//C++:    0xf | (0x2 ^ 0x2) -&gt; 0xf</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4F18\u5148\u7EA7\u5217\u8868\uFF1A</p><div class="language-go line-numbers-mode"><pre><code>Precedence    Operator
    <span class="token number">5</span>             <span class="token operator">*</span>  <span class="token operator">/</span>  <span class="token operator">%</span>  <span class="token operator">&lt;&lt;</span>  <span class="token operator">&gt;&gt;</span>  <span class="token operator">&amp;</span>  <span class="token operator">&amp;^</span>
    <span class="token number">4</span>             <span class="token operator">+</span>  <span class="token operator">-</span>  <span class="token operator">|</span>  <span class="token operator">^</span>
    <span class="token number">3</span>             <span class="token operator">==</span>  <span class="token operator">!=</span>  <span class="token operator">&lt;</span>  <span class="token operator">&lt;=</span>  <span class="token operator">&gt;</span>  <span class="token operator">&gt;=</span>
    <span class="token number">2</span>             <span class="token operator">&amp;&amp;</span>
    <span class="token number">1</span>             <span class="token operator">||</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_30-\u4E0D\u5BFC\u51FA\u7684-struct-\u5B57\u6BB5\u65E0\u6CD5\u88AB-encode" tabindex="-1">30. \u4E0D\u5BFC\u51FA\u7684 struct \u5B57\u6BB5\u65E0\u6CD5\u88AB encode <a class="header-anchor" href="#_30-\u4E0D\u5BFC\u51FA\u7684-struct-\u5B57\u6BB5\u65E0\u6CD5\u88AB-encode" aria-hidden="true">#</a></h3><p>\u4EE5\u5C0F\u5199\u5B57\u6BCD\u5F00\u5934\u7684\u5B57\u6BB5\u6210\u5458\u662F\u65E0\u6CD5\u88AB\u5916\u90E8\u76F4\u63A5\u8BBF\u95EE\u7684\uFF0C\u6240\u4EE5 <code>struct</code> \u5728\u8FDB\u884C json\u3001xml\u3001gob \u7B49\u683C\u5F0F\u7684 encode \u64CD\u4F5C\u65F6\uFF0C\u8FD9\u4E9B\u79C1\u6709\u5B57\u6BB5\u4F1A\u88AB\u5FFD\u7565\uFF0C\u5BFC\u51FA\u65F6\u5F97\u5230\u96F6\u503C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    in <span class="token operator">:=</span> MyData<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v\\n&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span>    <span class="token comment">// main.MyData{One:1, two:&quot;two&quot;}</span>

    encoded<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>encoded<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// {&quot;One&quot;:1}    // \u79C1\u6709\u5B57\u6BB5 two \u88AB\u5FFD\u7565\u4E86</span>

    <span class="token keyword">var</span> out MyData
    json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>encoded<span class="token punctuation">,</span> <span class="token operator">&amp;</span>out<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v\\n&quot;</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span>     <span class="token comment">// main.MyData{One:1, two:&quot;&quot;}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_31-\u7A0B\u5E8F\u9000\u51FA\u65F6\u8FD8\u6709-goroutine-\u5728\u6267\u884C" tabindex="-1">31. \u7A0B\u5E8F\u9000\u51FA\u65F6\u8FD8\u6709 goroutine \u5728\u6267\u884C <a class="header-anchor" href="#_31-\u7A0B\u5E8F\u9000\u51FA\u65F6\u8FD8\u6709-goroutine-\u5728\u6267\u884C" aria-hidden="true">#</a></h3><p>\u7A0B\u5E8F\u9ED8\u8BA4\u4E0D\u7B49\u6240\u6709 goroutine \u90FD\u6267\u884C\u5B8C\u624D\u9000\u51FA\uFF0C\u8FD9\u70B9\u9700\u8981\u7279\u522B\u6CE8\u610F\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4E3B\u7A0B\u5E8F\u4F1A\u76F4\u63A5\u9000\u51FA</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    workerCount <span class="token operator">:=</span> <span class="token number">2</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> workerCount<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">doIt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;all done!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">doIt</span><span class="token punctuation">(</span>workerID <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is running\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>        <span class="token comment">// \u6A21\u62DF goroutine \u6B63\u5728\u6267\u884C</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is done\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u4E0B\uFF0C<code>main()</code> \u4E3B\u7A0B\u5E8F\u4E0D\u7B49\u4E24\u4E2A goroutine \u6267\u884C\u5B8C\u5C31\u76F4\u63A5\u9000\u51FA\u4E86\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079610-d9523090-8363-463a-b6f0-aa4e55a1b7ef.png" alt="img"></p><p>\u5E38\u7528\u89E3\u51B3\u529E\u6CD5\uFF1A\u4F7F\u7528 &quot;WaitGroup&quot; \u53D8\u91CF\uFF0C\u5B83\u4F1A\u8BA9\u4E3B\u7A0B\u5E8F\u7B49\u5F85\u6240\u6709 goroutine \u6267\u884C\u5B8C\u6BD5\u518D\u9000\u51FA\u3002</p><p>\u5982\u679C\u4F60\u7684 goroutine \u8981\u505A\u6D88\u606F\u7684\u5FAA\u73AF\u5904\u7406\u7B49\u8017\u65F6\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u5411\u5B83\u4EEC\u53D1\u9001\u4E00\u6761 <code>kill</code> \u6D88\u606F\u6765\u5173\u95ED\u5B83\u4EEC\u3002\u6216\u76F4\u63A5\u5173\u95ED\u4E00\u4E2A\u5B83\u4EEC\u90FD\u7B49\u5F85\u63A5\u6536\u6570\u636E\u7684 channel\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u7B49\u5F85\u6240\u6709 goroutine \u6267\u884C\u5B8C\u6BD5</span>
<span class="token comment">// \u8FDB\u5165\u6B7B\u9501</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
    done <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    workerCount <span class="token operator">:=</span> <span class="token number">2</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> workerCount<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">go</span> <span class="token function">doIt</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> done<span class="token punctuation">,</span> wg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">close</span><span class="token punctuation">(</span>done<span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;all done!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">doIt</span><span class="token punctuation">(</span>workerID <span class="token builtin">int</span><span class="token punctuation">,</span> done <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> wg sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is running\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
    <span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;-</span>done
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is done\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079522-5d8f767c-aa6d-4960-bcd3-795aca54b1da.png" alt="img"></p><p>\u770B\u8D77\u6765\u597D\u50CF goroutine \u90FD\u6267\u884C\u5B8C\u4E86\uFF0C\u7136\u800C\u62A5\u9519\uFF1A</p><p>fatal error: all goroutines are asleep - deadlock!</p><p>\u4E3A\u4EC0\u4E48\u4F1A\u53D1\u751F\u6B7B\u9501\uFF1Fgoroutine \u5728\u9000\u51FA\u524D\u8C03\u7528\u4E86 <code>wg.Done()</code> \uFF0C\u7A0B\u5E8F\u5E94\u8BE5\u6B63\u5E38\u9000\u51FA\u7684\u3002</p><p>\u539F\u56E0\u662F goroutine \u5F97\u5230\u7684 &quot;WaitGroup&quot; \u53D8\u91CF\u662F <code>var wg WaitGroup</code> \u7684\u4E00\u4EFD\u62F7\u8D1D\u503C\uFF0C\u5373 <code>doIt()</code> \u4F20\u53C2\u53EA\u4F20\u503C\u3002\u6240\u4EE5\u54EA\u6015\u5728\u6BCF\u4E2A goroutine \u4E2D\u90FD\u8C03\u7528\u4E86 <code>wg.Done()</code>\uFF0C \u4E3B\u7A0B\u5E8F\u4E2D\u7684 <code>wg</code> \u53D8\u91CF\u5E76\u4E0D\u4F1A\u53D7\u5230\u5F71\u54CD\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u7B49\u5F85\u6240\u6709 goroutine \u6267\u884C\u5B8C\u6BD5</span>
<span class="token comment">// \u4F7F\u7528\u4F20\u5740\u65B9\u5F0F\u4E3A WaitGroup \u53D8\u91CF\u4F20\u53C2</span>
<span class="token comment">// \u4F7F\u7528 channel \u5173\u95ED goroutine</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
    done <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    workerCount <span class="token operator">:=</span> <span class="token number">2</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> workerCount<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">go</span> <span class="token function">doIt</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> done<span class="token punctuation">,</span> <span class="token operator">&amp;</span>wg<span class="token punctuation">)</span>    <span class="token comment">// wg \u4F20\u6307\u9488\uFF0CdoIt() \u5185\u90E8\u4F1A\u6539\u53D8 wg \u7684\u503C</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> workerCount<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>    <span class="token comment">// \u5411 ch \u4E2D\u53D1\u9001\u6570\u636E\uFF0C\u5173\u95ED goroutine</span>
        ch <span class="token operator">&lt;-</span> i
    <span class="token punctuation">}</span>

    <span class="token function">close</span><span class="token punctuation">(</span>done<span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;all done!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">doIt</span><span class="token punctuation">(</span>workerID <span class="token builtin">int</span><span class="token punctuation">,</span> ch <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> done <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is running\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
    <span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> m <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] m =&gt; %v\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">,</span> m<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span>done<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] is done\\n&quot;</span><span class="token punctuation">,</span> workerID<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079530-48ae068a-8fe5-49b8-ba79-6aecc941525a.png" alt="img"></p><h3 id="_32-\u5411\u65E0\u7F13\u51B2\u7684-channel-\u53D1\u9001\u6570\u636E\uFF0C\u53EA\u8981-receiver-\u51C6\u5907\u597D\u4E86\u5C31\u4F1A\u7ACB\u523B\u8FD4\u56DE" tabindex="-1">32. \u5411\u65E0\u7F13\u51B2\u7684 channel \u53D1\u9001\u6570\u636E\uFF0C\u53EA\u8981 receiver \u51C6\u5907\u597D\u4E86\u5C31\u4F1A\u7ACB\u523B\u8FD4\u56DE <a class="header-anchor" href="#_32-\u5411\u65E0\u7F13\u51B2\u7684-channel-\u53D1\u9001\u6570\u636E\uFF0C\u53EA\u8981-receiver-\u51C6\u5907\u597D\u4E86\u5C31\u4F1A\u7ACB\u523B\u8FD4\u56DE" aria-hidden="true">#</a></h3><p>\u53EA\u6709\u5728\u6570\u636E\u88AB receiver \u5904\u7406\u65F6\uFF0Csender \u624D\u4F1A\u963B\u585E\u3002\u56E0\u8FD0\u884C\u73AF\u5883\u800C\u5F02\uFF0C\u5728 sender \u53D1\u9001\u5B8C\u6570\u636E\u540E\uFF0Creceiver \u7684 goroutine \u53EF\u80FD\u6CA1\u6709\u8DB3\u591F\u7684\u65F6\u95F4\u5904\u7406\u4E0B\u4E00\u4E2A\u6570\u636E\u3002\u5982\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">string</span><span class="token punctuation">)</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> m <span class="token operator">:=</span> <span class="token keyword">range</span> ch <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Processed:&quot;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span>
            time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>    <span class="token comment">// \u6A21\u62DF\u9700\u8981\u957F\u65F6\u95F4\u8FD0\u884C\u7684\u64CD\u4F5C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    ch <span class="token operator">&lt;-</span> <span class="token string">&quot;cmd.1&quot;</span>
    ch <span class="token operator">&lt;-</span> <span class="token string">&quot;cmd.2&quot;</span> <span class="token comment">// \u4E0D\u4F1A\u88AB\u63A5\u6536\u5904\u7406</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079544-84c1140a-23ae-4858-80b7-b0adf759ee18.png" alt="img"></p><h3 id="_33-\u5411\u5DF2\u5173\u95ED\u7684-channel-\u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210-panic" tabindex="-1">33. \u5411\u5DF2\u5173\u95ED\u7684 channel \u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210 panic <a class="header-anchor" href="#_33-\u5411\u5DF2\u5173\u95ED\u7684-channel-\u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210-panic" aria-hidden="true">#</a></h3><p>\u4ECE\u5DF2\u5173\u95ED\u7684 channel \u63A5\u6536\u6570\u636E\u662F\u5B89\u5168\u7684\uFF1A</p><p>\u63A5\u6536\u72B6\u6001\u503C <code>ok</code> \u662F <code>false</code> \u65F6\u8868\u660E channel \u4E2D\u5DF2\u6CA1\u6709\u6570\u636E\u53EF\u4EE5\u63A5\u6536\u4E86\u3002\u7C7B\u4F3C\u7684\uFF0C\u4ECE\u6709\u7F13\u51B2\u7684 channel \u4E2D\u63A5\u6536\u6570\u636E\uFF0C\u7F13\u5B58\u7684\u6570\u636E\u83B7\u53D6\u5B8C\u518D\u6CA1\u6709\u6570\u636E\u53EF\u53D6\u65F6\uFF0C\u72B6\u6001\u503C\u4E5F\u662F <code>false</code></p><p>\u5411\u5DF2\u5173\u95ED\u7684 channel \u4E2D\u53D1\u9001\u6570\u636E\u4F1A\u9020\u6210 panic\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>idx <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch <span class="token operator">&lt;-</span> idx
        <span class="token punctuation">}</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>ch<span class="token punctuation">)</span>        <span class="token comment">// \u8F93\u51FA\u7B2C\u4E00\u4E2A\u53D1\u9001\u7684\u503C</span>
    <span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>            <span class="token comment">// \u4E0D\u80FD\u5173\u95ED\uFF0C\u8FD8\u6709\u5176\u4ED6\u7684 sender</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>    <span class="token comment">// \u6A21\u62DF\u505A\u5176\u4ED6\u7684\u64CD\u4F5C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079495-645d7d98-a284-417a-94d0-a0b810b6d032.png" alt="img"></p><p>\u9488\u5BF9\u4E0A\u8FB9\u6709 bug \u7684\u8FD9\u4E2A\u4F8B\u5B50\uFF0C\u53EF\u4F7F\u7528\u4E00\u4E2A\u5E9F\u5F03 channel <code>done</code> \u6765\u544A\u8BC9\u5269\u4F59\u7684 goroutine \u65E0\u9700\u518D\u5411 ch \u53D1\u9001\u6570\u636E\u3002\u6B64\u65F6 <code>&lt;- done</code> \u7684\u7ED3\u679C\u662F <code>{}</code>\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    done <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>idx <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">select</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> ch <span class="token operator">&lt;-</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">:</span>
                fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token string">&quot;Send result&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">case</span> <span class="token operator">&lt;-</span>done<span class="token punctuation">:</span>
                fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token string">&quot;Exiting&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Result: &quot;</span><span class="token punctuation">,</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">)</span>
    <span class="token function">close</span><span class="token punctuation">(</span>done<span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079515-81889255-1ad8-424a-9b46-20de774153b4.png" alt="img"></p><h3 id="_34-\u4F7F\u7528\u4E86\u503C\u4E3A-nil-\u7684-channel" tabindex="-1">34. \u4F7F\u7528\u4E86\u503C\u4E3A <code>nil</code> \u7684 channel <a class="header-anchor" href="#_34-\u4F7F\u7528\u4E86\u503C\u4E3A-nil-\u7684-channel" aria-hidden="true">#</a></h3><p>\u5728\u4E00\u4E2A\u503C\u4E3A nil \u7684 channel \u4E0A\u53D1\u9001\u548C\u63A5\u6536\u6570\u636E\u5C06\u6C38\u4E45\u963B\u585E\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ch <span class="token keyword">chan</span> <span class="token builtin">int</span> <span class="token comment">// \u672A\u521D\u59CB\u5316\uFF0C\u503C\u4E3A nil</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch <span class="token operator">&lt;-</span> i
        <span class="token punctuation">}</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Result: &quot;</span><span class="token punctuation">,</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>runtime \u6B7B\u9501\u9519\u8BEF\uFF1A</p><p>fatal error: all goroutines are asleep - deadlock!</p><p>goroutine 1 [chan receive (nil chan)]</p><p>\u5229\u7528\u8FD9\u4E2A\u6B7B\u9501\u7684\u7279\u6027\uFF0C\u53EF\u4EE5\u7528\u5728 select \u4E2D\u52A8\u6001\u7684\u6253\u5F00\u548C\u5173\u95ED case \u8BED\u53E5\u5757\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    inCh <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    outCh <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> in <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span> <span class="token operator">=</span> inCh
        <span class="token keyword">var</span> out <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span>
        <span class="token keyword">var</span> val <span class="token builtin">int</span>

        <span class="token keyword">for</span> <span class="token punctuation">{</span>
            <span class="token keyword">select</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> out <span class="token operator">&lt;-</span> val<span class="token punctuation">:</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------&quot;</span><span class="token punctuation">)</span>
                out <span class="token operator">=</span> <span class="token boolean">nil</span>
                in <span class="token operator">=</span> inCh
            <span class="token keyword">case</span> val <span class="token operator">=</span> <span class="token operator">&lt;-</span>in<span class="token punctuation">:</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;++++++++++&quot;</span><span class="token punctuation">)</span>
                out <span class="token operator">=</span> outCh
                in <span class="token operator">=</span> <span class="token boolean">nil</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> r <span class="token operator">:=</span> <span class="token keyword">range</span> outCh <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Result: &quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    inCh <span class="token operator">&lt;-</span> <span class="token number">1</span>
    inCh <span class="token operator">&lt;-</span> <span class="token number">2</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079586-ec05c601-40cf-4ae1-b8f6-c02b63226d74.png" alt="img"></p><h3 id="_34-\u82E5\u51FD\u6570-receiver-\u4F20\u53C2\u662F\u4F20\u503C\u65B9\u5F0F\uFF0C\u5219\u65E0\u6CD5\u4FEE\u6539\u53C2\u6570\u7684\u539F\u6709\u503C" tabindex="-1">34. \u82E5\u51FD\u6570 receiver \u4F20\u53C2\u662F\u4F20\u503C\u65B9\u5F0F\uFF0C\u5219\u65E0\u6CD5\u4FEE\u6539\u53C2\u6570\u7684\u539F\u6709\u503C <a class="header-anchor" href="#_34-\u82E5\u51FD\u6570-receiver-\u4F20\u53C2\u662F\u4F20\u503C\u65B9\u5F0F\uFF0C\u5219\u65E0\u6CD5\u4FEE\u6539\u53C2\u6570\u7684\u539F\u6709\u503C" aria-hidden="true">#</a></h3><p>\u65B9\u6CD5 receiver \u7684\u53C2\u6570\u4E0E\u4E00\u822C\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u4F3C\uFF1A\u5982\u679C\u58F0\u660E\u4E3A\u503C\uFF0C\u90A3\u65B9\u6CD5\u4F53\u5F97\u5230\u7684\u662F\u4E00\u4EFD\u53C2\u6570\u7684\u503C\u62F7\u8D1D\uFF0C\u6B64\u65F6\u5BF9\u53C2\u6570\u7684\u4EFB\u4F55\u4FEE\u6539\u90FD\u4E0D\u4F1A\u5BF9\u539F\u6709\u503C\u4EA7\u751F\u5F71\u54CD\u3002</p><p>\u9664\u975E receiver \u53C2\u6570\u662F map \u6216 slice \u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u5E76\u4E14\u662F\u4EE5\u6307\u9488\u65B9\u5F0F\u66F4\u65B0 map \u4E2D\u7684\u5B57\u6BB5\u3001slice \u4E2D\u7684\u5143\u7D20\u7684\uFF0C\u624D\u4F1A\u66F4\u65B0\u539F\u6709\u503C:</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    num   <span class="token builtin">int</span>
    key   <span class="token operator">*</span><span class="token builtin">string</span>
    items <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">bool</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>this <span class="token operator">*</span>data<span class="token punctuation">)</span> <span class="token function">pointerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    this<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">7</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>this data<span class="token punctuation">)</span> <span class="token function">valueFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    this<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">8</span>
    <span class="token operator">*</span>this<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&quot;valueFunc.key&quot;</span>
    this<span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token string">&quot;valueFunc&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key <span class="token operator">:=</span> <span class="token string">&quot;key1&quot;</span>

    d <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;num=%v  key=%v  items=%v\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token operator">*</span>d<span class="token punctuation">.</span>key<span class="token punctuation">,</span> d<span class="token punctuation">.</span>items<span class="token punctuation">)</span>

    d<span class="token punctuation">.</span><span class="token function">pointerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u4FEE\u6539 num \u7684\u503C\u4E3A 7</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;num=%v  key=%v  items=%v\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token operator">*</span>d<span class="token punctuation">.</span>key<span class="token punctuation">,</span> d<span class="token punctuation">.</span>items<span class="token punctuation">)</span>

    d<span class="token punctuation">.</span><span class="token function">valueFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u4FEE\u6539 key \u548C items \u7684\u503C</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;num=%v  key=%v  items=%v\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token operator">*</span>d<span class="token punctuation">.</span>key<span class="token punctuation">,</span> d<span class="token punctuation">.</span>items<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079495-aac01481-dec9-4479-b0be-d9f7165af772.png" alt="img"></p><h2 id="\u4E2D\u7EA7\u7BC7\uFF1A35-50" tabindex="-1">\u4E2D\u7EA7\u7BC7\uFF1A35-50 <a class="header-anchor" href="#\u4E2D\u7EA7\u7BC7\uFF1A35-50" aria-hidden="true">#</a></h2><h3 id="_35-\u5173\u95ED-http-\u7684\u54CD\u5E94\u4F53" tabindex="-1">35. \u5173\u95ED HTTP \u7684\u54CD\u5E94\u4F53 <a class="header-anchor" href="#_35-\u5173\u95ED-http-\u7684\u54CD\u5E94\u4F53" aria-hidden="true">#</a></h3><p>\u4F7F\u7528 HTTP \u6807\u51C6\u5E93\u53D1\u8D77\u8BF7\u6C42\u3001\u83B7\u53D6\u54CD\u5E94\u65F6\uFF0C\u5373\u4F7F\u4F60\u4E0D\u4ECE\u54CD\u5E94\u4E2D\u8BFB\u53D6\u4EFB\u4F55\u6570\u636E\u6216\u54CD\u5E94\u4E3A\u7A7A\uFF0C\u90FD\u9700\u8981\u624B\u52A8\u5173\u95ED\u54CD\u5E94\u4F53\u3002\u65B0\u624B\u5F88\u5BB9\u6613\u5FD8\u8BB0\u624B\u52A8\u5173\u95ED\uFF0C\u6216\u8005\u5199\u5728\u4E86\u9519\u8BEF\u7684\u4F4D\u7F6E\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u8BF7\u6C42\u5931\u8D25\u9020\u6210 panic</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.ipify.org?format=json&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// resp \u53EF\u80FD\u4E3A nil\uFF0C\u4E0D\u80FD\u8BFB\u53D6 Body</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">checkError</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4E0A\u8FB9\u7684\u4EE3\u7801\u80FD\u6B63\u786E\u53D1\u8D77\u8BF7\u6C42\uFF0C\u4F46\u662F\u4E00\u65E6\u8BF7\u6C42\u5931\u8D25\uFF0C\u53D8\u91CF <code>resp</code> \u503C\u4E3A <code>nil</code>\uFF0C\u9020\u6210 panic\uFF1A</p><p>panic: runtime error: invalid memory address or nil pointer dereference</p><p>\u5E94\u8BE5\u5148\u68C0\u67E5 HTTP \u54CD\u5E94\u9519\u8BEF\u4E3A <code>nil</code>\uFF0C\u518D\u8C03\u7528 <code>resp.Body.Close()</code> \u6765\u5173\u95ED\u54CD\u5E94\u4F53\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u5927\u591A\u6570\u60C5\u51B5\u6B63\u786E\u7684\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.ipify.org?format=json&quot;</span><span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u7EDD\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u7684\u6B63\u786E\u5173\u95ED\u65B9\u5F0F</span>
    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><p>Get <a href="https://api.ipify.org?format=json" target="_blank" rel="noopener noreferrer">https://api.ipify.org?format=...</a>: x509: certificate signed by unknown authority</p><p>\u7EDD\u5927\u591A\u6570\u8BF7\u6C42\u5931\u8D25\u7684\u60C5\u51B5\u4E0B\uFF0C<code>resp</code> \u7684\u503C\u4E3A <code>nil</code> \u4E14 <code>err</code> \u4E3A <code>non-nil</code>\u3002\u4F46\u5982\u679C\u4F60\u5F97\u5230\u7684\u662F\u91CD\u5B9A\u5411\u9519\u8BEF\uFF0C\u90A3\u5B83\u4FE9\u7684\u503C\u90FD\u662F <code>non-nil</code>\uFF0C\u6700\u540E\u4F9D\u65E7\u53EF\u80FD\u53D1\u751F\u5185\u5B58\u6CC4\u9732\u30022 \u4E2A\u89E3\u51B3\u529E\u6CD5\uFF1A</p><ul><li>\u53EF\u4EE5\u76F4\u63A5\u5728\u5904\u7406 HTTP \u54CD\u5E94\u9519\u8BEF\u7684\u4EE3\u7801\u5757\u4E2D\uFF0C\u76F4\u63A5\u5173\u95ED\u975E nil \u7684\u54CD\u5E94\u4F53\u3002</li><li>\u624B\u52A8\u8C03\u7528 <code>defer</code> \u6765\u5173\u95ED\u54CD\u5E94\u4F53\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5173\u95ED resp.Body \u7684\u6B63\u786E\u59FF\u52BF</span>
    <span class="token keyword">if</span> resp <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>resp.Body.Close()</code> \u65E9\u5148\u7248\u672C\u7684\u5B9E\u73B0\u662F\u8BFB\u53D6\u54CD\u5E94\u4F53\u7684\u6570\u636E\u4E4B\u540E\u4E22\u5F03\uFF0C\u4FDD\u8BC1\u4E86 keep-alive \u7684 HTTP \u8FDE\u63A5\u80FD\u91CD\u7528\u5904\u7406\u4E0D\u6B62\u4E00\u4E2A\u8BF7\u6C42\u3002\u4F46 Go \u7684\u6700\u65B0\u7248\u672C\u5C06\u8BFB\u53D6\u5E76\u4E22\u5F03\u6570\u636E\u7684\u4EFB\u52A1\u4EA4\u7ED9\u4E86\u7528\u6237\uFF0C\u5982\u679C\u4F60\u4E0D\u5904\u7406\uFF0CHTTP \u8FDE\u63A5\u53EF\u80FD\u4F1A\u76F4\u63A5\u5173\u95ED\u800C\u975E\u91CD\u7528\uFF0C\u53C2\u8003\u5728 Go 1.5 \u7248\u672C\u6587\u6863\u3002</p><p>\u5982\u679C\u7A0B\u5E8F\u5927\u91CF\u91CD\u7528 HTTP \u957F\u8FDE\u63A5\uFF0C\u4F60\u53EF\u80FD\u8981\u5728\u5904\u7406\u54CD\u5E94\u7684\u903B\u8F91\u4EE3\u7801\u4E2D\u52A0\u5165\uFF1A</p><div class="language-"><pre><code>_, err = io.Copy(ioutil.Discard, resp.Body)    // \u624B\u52A8\u4E22\u5F03\u8BFB\u53D6\u5B8C\u6BD5\u7684\u6570\u636E
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u5982\u679C\u4F60\u9700\u8981\u5B8C\u6574\u8BFB\u53D6\u54CD\u5E94\uFF0C\u4E0A\u8FB9\u7684\u4EE3\u7801\u662F\u9700\u8981\u5199\u7684\u3002\u6BD4\u5982\u5728\u89E3\u7801 API \u7684 JSON \u54CD\u5E94\u6570\u636E\uFF1A</p><div class="language-"><pre><code>json.NewDecoder(resp.Body).Decode(&amp;data)
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="_36-\u5173\u95ED-http-\u8FDE\u63A5" tabindex="-1">36. \u5173\u95ED HTTP \u8FDE\u63A5 <a class="header-anchor" href="#_36-\u5173\u95ED-http-\u8FDE\u63A5" aria-hidden="true">#</a></h3><p>\u4E00\u4E9B\u652F\u6301 HTTP1.1 \u6216 HTTP1.0 \u914D\u7F6E\u4E86 <code>connection: keep-alive</code> \u9009\u9879\u7684\u670D\u52A1\u5668\u4F1A\u4FDD\u6301\u4E00\u6BB5\u65F6\u95F4\u7684\u957F\u8FDE\u63A5\u3002\u4F46\u6807\u51C6\u5E93 &quot;net/http&quot; \u7684\u8FDE\u63A5\u9ED8\u8BA4\u53EA\u5728\u670D\u52A1\u5668\u4E3B\u52A8\u8981\u6C42\u5173\u95ED\u65F6\u624D\u65AD\u5F00\uFF0C\u6240\u4EE5\u4F60\u7684\u7A0B\u5E8F\u53EF\u80FD\u4F1A\u6D88\u8017\u5B8C socket \u63CF\u8FF0\u7B26\u3002\u89E3\u51B3\u529E\u6CD5\u6709 2 \u4E2A\uFF0C\u8BF7\u6C42\u7ED3\u675F\u540E\uFF1A</p><ul><li>\u76F4\u63A5\u8BBE\u7F6E\u8BF7\u6C42\u53D8\u91CF\u7684 <code>Close</code> \u5B57\u6BB5\u503C\u4E3A <code>true</code>\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7ED3\u675F\u540E\u5C31\u4F1A\u4E3B\u52A8\u5173\u95ED\u8FDE\u63A5\u3002</li><li>\u8BBE\u7F6E Header \u8BF7\u6C42\u5934\u90E8\u9009\u9879 <code>Connection: close</code>\uFF0C\u7136\u540E\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u5934\u90E8\u4E5F\u4F1A\u6709\u8FD9\u4E2A\u9009\u9879\uFF0C\u6B64\u65F6 HTTP \u6807\u51C6\u5E93\u4F1A\u4E3B\u52A8\u65AD\u5F00\u8FDE\u63A5\u3002</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4E3B\u52A8\u5173\u95ED\u8FDE\u63A5</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    req<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://golang.org&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    req<span class="token punctuation">.</span>Close <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token comment">//req.Header.Add(&quot;Connection&quot;, &quot;close&quot;)    // \u7B49\u6548\u7684\u5173\u95ED\u65B9\u5F0F</span>

    resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span>DefaultClient<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
    <span class="token keyword">if</span> resp <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4F60\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u81EA\u5B9A\u4E49\u914D\u7F6E\u7684 HTTP transport \u5BA2\u6237\u7AEF\uFF0C\u7528\u6765\u53D6\u6D88 HTTP \u5168\u5C40\u7684\u590D\u7528\u8FDE\u63A5\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tr <span class="token operator">:=</span> http<span class="token punctuation">.</span>Transport<span class="token punctuation">{</span>DisableKeepAlives<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>
    client <span class="token operator">:=</span> http<span class="token punctuation">.</span>Client<span class="token punctuation">{</span>Transport<span class="token punctuation">:</span> <span class="token operator">&amp;</span>tr<span class="token punctuation">}</span>

    resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;https://golang.google.cn/&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> resp <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span>    <span class="token comment">// 200</span>

    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6839\u636E\u9700\u6C42\u9009\u62E9\u4F7F\u7528\u573A\u666F\uFF1A</p><ul><li>\u82E5\u4F60\u7684\u7A0B\u5E8F\u8981\u5411\u540C\u4E00\u670D\u52A1\u5668\u53D1\u5927\u91CF\u8BF7\u6C42\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u7684\u4FDD\u6301\u957F\u8FDE\u63A5\u3002</li><li>\u82E5\u4F60\u7684\u7A0B\u5E8F\u8981\u8FDE\u63A5\u5927\u91CF\u7684\u670D\u52A1\u5668\uFF0C\u4E14\u6BCF\u53F0\u670D\u52A1\u5668\u53EA\u8BF7\u6C42\u4E00\u4E24\u6B21\uFF0C\u90A3\u6536\u5230\u8BF7\u6C42\u540E\u76F4\u63A5\u5173\u95ED\u8FDE\u63A5\u3002\u6216\u589E\u52A0\u6700\u5927\u6587\u4EF6\u6253\u5F00\u6570 <code>fs.file-max</code> \u7684\u503C\u3002</li></ul><h3 id="_37-\u5C06-json-\u4E2D\u7684\u6570\u5B57\u89E3\u7801\u4E3A-interface-\u7C7B\u578B" tabindex="-1">37. \u5C06 JSON \u4E2D\u7684\u6570\u5B57\u89E3\u7801\u4E3A interface \u7C7B\u578B <a class="header-anchor" href="#_37-\u5C06-json-\u4E2D\u7684\u6570\u5B57\u89E3\u7801\u4E3A-interface-\u7C7B\u578B" aria-hidden="true">#</a></h3><p>\u5728 encode/decode JSON \u6570\u636E\u65F6\uFF0CGo \u9ED8\u8BA4\u4F1A\u5C06\u6570\u503C\u5F53\u505A float64 \u5904\u7406\uFF0C\u6BD4\u5982\u4E0B\u8FB9\u7684\u4EE3\u7801\u4F1A\u9020\u6210 panic\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;: 200}\`</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T\\n&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// float64</span>
    <span class="token keyword">var</span> status <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>    <span class="token comment">// \u7C7B\u578B\u65AD\u8A00\u9519\u8BEF</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Status value: &quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>panic: interface conversion: interface {} is float64, not int</p><p>\u5982\u679C\u4F60\u5C1D\u8BD5 decode \u7684 JSON \u5B57\u6BB5\u662F\u6574\u578B\uFF0C\u4F60\u53EF\u4EE5\uFF1A</p><ul><li>\u5C06 int \u503C\u8F6C\u4E3A float \u7EDF\u4E00\u4F7F\u7528</li><li>\u5C06 decode \u540E\u9700\u8981\u7684 float \u503C\u8F6C\u4E3A int \u4F7F\u7528</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u5C06 decode \u7684\u503C\u8F6C\u4E3A int \u4F7F\u7528</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;: 200}\`</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> status <span class="token operator">=</span> <span class="token function">uint64</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">float64</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Status value: &quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>\u4F7F\u7528 <code>Decoder</code> \u7C7B\u578B\u6765 decode JSON \u6570\u636E\uFF0C\u660E\u786E\u8868\u793A\u5B57\u6BB5\u7684\u503C\u7C7B\u578B</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u6307\u5B9A\u5B57\u6BB5\u7C7B\u578B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;: 200}\`</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">var</span> decoder <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
    decoder<span class="token punctuation">.</span><span class="token function">UseNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> err <span class="token operator">:=</span> decoder<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> status<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Status value: &quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

 <span class="token comment">// \u4F60\u53EF\u4EE5\u4F7F\u7528 string \u6765\u5B58\u50A8\u6570\u503C\u6570\u636E\uFF0C\u5728 decode \u65F6\u518D\u51B3\u5B9A\u6309 int \u8FD8\u662F float \u4F7F\u7528</span>
 <span class="token comment">// \u5C06\u6570\u636E\u8F6C\u4E3A decode \u4E3A string</span>
 <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">var</span> result <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token keyword">var</span> decoder <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
      decoder<span class="token punctuation">.</span><span class="token function">UseNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> err <span class="token operator">:=</span> decoder<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token keyword">var</span> status <span class="token builtin">uint64</span>
      err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
       fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Status value: &quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>- \u4F7F\u7528 <code>struct</code> \u7C7B\u578B\u5C06\u4F60\u9700\u8981\u7684\u6570\u636E\u6620\u5C04\u4E3A\u6570\u503C\u578B</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// struct \u4E2D\u6307\u5B9A\u5B57\u6BB5\u7C7B\u578B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;: 200}\`</span><span class="token punctuation">)</span>
      <span class="token keyword">var</span> result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
          Status <span class="token builtin">uint64</span> <span class="token string">\`json:&quot;status&quot;\`</span>
      <span class="token punctuation">}</span>

      err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span>
      <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Result: %+v&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u53EF\u4EE5\u4F7F\u7528 <code>struct</code> \u5C06\u6570\u503C\u7C7B\u578B\u6620\u5C04\u4E3A <code>json.RawMessage</code> \u539F\u751F\u6570\u636E\u7C7B\u578B \u9002\u7528\u4E8E\u5982\u679C JSON \u6570\u636E\u4E0D\u7740\u6025 decode \u6216 JSON \u67D0\u4E2A\u5B57\u6BB5\u7684\u503C\u7C7B\u578B\u4E0D\u56FA\u5B9A\u7B49\u60C5\u51B5\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u72B6\u6001\u540D\u79F0\u53EF\u80FD\u662F int \u4E5F\u53EF\u80FD\u662F string\uFF0C\u6307\u5B9A\u4E3A json.RawMessage \u7C7B\u578B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    records <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;:200, &quot;tag&quot;:&quot;one&quot;}\`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`{&quot;status&quot;:&quot;ok&quot;, &quot;tag&quot;:&quot;two&quot;}\`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> record <span class="token operator">:=</span> <span class="token keyword">range</span> records <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
            StatusCode <span class="token builtin">uint64</span>
            StatusName <span class="token builtin">string</span>
            Status     json<span class="token punctuation">.</span>RawMessage <span class="token string">\`json:&quot;status&quot;\`</span>
            Tag        <span class="token builtin">string</span>          <span class="token string">\`json:&quot;tag&quot;\`</span>
        <span class="token punctuation">}</span>

        err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span>
        <span class="token function">checkError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>

        <span class="token keyword">var</span> name <span class="token builtin">string</span>
        err <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Status<span class="token punctuation">,</span> <span class="token operator">&amp;</span>name<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span>StatusName <span class="token operator">=</span> name
        <span class="token punctuation">}</span>

        <span class="token keyword">var</span> code <span class="token builtin">uint64</span>
        err <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Status<span class="token punctuation">,</span> <span class="token operator">&amp;</span>code<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> code
        <span class="token punctuation">}</span>

        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%v] result =&gt; %+v\\n&quot;</span><span class="token punctuation">,</span> idx<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_38-struct\u3001array\u3001slice-\u548C-map-\u7684\u503C\u6BD4\u8F83" tabindex="-1">38. struct\u3001array\u3001slice \u548C map \u7684\u503C\u6BD4\u8F83 <a class="header-anchor" href="#_38-struct\u3001array\u3001slice-\u548C-map-\u7684\u503C\u6BD4\u8F83" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u4F7F\u7528\u76F8\u7B49\u8FD0\u7B97\u7B26 <code>==</code> \u6765\u6BD4\u8F83\u7ED3\u6784\u4F53\u53D8\u91CF\uFF0C\u524D\u63D0\u662F\u4E24\u4E2A\u7ED3\u6784\u4F53\u7684\u6210\u5458\u90FD\u662F\u53EF\u6BD4\u8F83\u7684\u7C7B\u578B\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    num     <span class="token builtin">int</span>
    fp      <span class="token builtin">float32</span>
    <span class="token builtin">complex</span> <span class="token builtin">complex64</span>
    str     <span class="token builtin">string</span>
    char    <span class="token builtin">rune</span>
    yes     <span class="token builtin">bool</span>
    events  <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">string</span>
    handler <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    ref     <span class="token operator">*</span><span class="token builtin">byte</span>
    raw     <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v1 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    v2 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> v1 <span class="token operator">==</span> v2<span class="token punctuation">)</span>    <span class="token comment">// true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5982\u679C\u4E24\u4E2A\u7ED3\u6784\u4F53\u4E2D\u6709\u4EFB\u610F\u6210\u5458\u662F\u4E0D\u53EF\u6BD4\u8F83\u7684\uFF0C\u5C06\u4F1A\u9020\u6210\u7F16\u8BD1\u9519\u8BEF\u3002\u6CE8\u610F\u6570\u7EC4\u6210\u5458\u53EA\u6709\u5728\u6570\u7EC4\u5143\u7D20\u53EF\u6BD4\u8F83\u65F6\u5019\u624D\u53EF\u6BD4\u8F83\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    num    <span class="token builtin">int</span>
    checks <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>        <span class="token comment">// \u65E0\u6CD5\u6BD4\u8F83</span>
    doIt   <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>        <span class="token comment">// \u65E0\u6CD5\u6BD4\u8F83</span>
    m      <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span>    <span class="token comment">// \u65E0\u6CD5\u6BD4\u8F83</span>
    bytes  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>            <span class="token comment">// \u65E0\u6CD5\u6BD4\u8F83</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v1 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    v2 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> v1 <span class="token operator">==</span> v2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>invalid operation: v1 == v2 (struct containing [10]func() bool cannot be compared)</p><p>Go \u63D0\u4F9B\u4E86\u4E00\u4E9B\u5E93\u51FD\u6570\u6765\u6BD4\u8F83\u90A3\u4E9B\u65E0\u6CD5\u4F7F\u7528 <code>==</code> \u6BD4\u8F83\u7684\u53D8\u91CF\uFF0C\u6BD4\u5982\u4F7F\u7528 &quot;reflect&quot; \u5305\u7684 <code>DeepEqual()</code> \uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u6BD4\u8F83\u76F8\u7B49\u8FD0\u7B97\u7B26\u65E0\u6CD5\u6BD4\u8F83\u7684\u5143\u7D20</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v1 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    v2 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>

    m1 <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span>
    m2 <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> m2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>

    s1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    s2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
       <span class="token comment">// \u6CE8\u610F\u4E24\u4E2A slice \u76F8\u7B49\uFF0C\u503C\u548C\u987A\u5E8F\u5FC5\u987B\u4E00\u81F4</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u79CD\u6BD4\u8F83\u65B9\u5F0F\u53EF\u80FD\u6BD4\u8F83\u6162\uFF0C\u6839\u636E\u4F60\u7684\u7A0B\u5E8F\u9700\u6C42\u6765\u4F7F\u7528\u3002<code>DeepEqual()</code> \u8FD8\u6709\u5176\u4ED6\u7528\u6CD5\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> b1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
    b2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;b1 == b2: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>b1<span class="token punctuation">,</span> b2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>\u6CE8\u610F\uFF1A</strong></p><ul><li><code>DeepEqual()</code> \u5E76\u4E0D\u603B\u9002\u5408\u4E8E\u6BD4\u8F83 slice</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;one&quot;</span>
    <span class="token keyword">var</span> in <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;one&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;str == in: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>

    v1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span>
    v2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 == v2: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>

    data <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span>  <span class="token number">200</span><span class="token punctuation">,</span>
        <span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    encoded<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">var</span> decoded <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>encoded<span class="token punctuation">,</span> <span class="token operator">&amp;</span>decoded<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;data == decoded: &quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> decoded<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5982\u679C\u8981\u5927\u5C0F\u5199\u4E0D\u654F\u611F\u6765\u6BD4\u8F83 byte \u6216 string \u4E2D\u7684\u82F1\u6587\u6587\u672C\uFF0C\u53EF\u4EE5\u4F7F\u7528 &quot;bytes&quot; \u6216 &quot;strings&quot; \u5305\u7684 <code>ToUpper()</code> \u548C <code>ToLower()</code> \u51FD\u6570\u3002\u6BD4\u8F83\u5176\u4ED6\u8BED\u8A00\u7684 byte \u6216 string\uFF0C\u5E94\u4F7F\u7528 <code>bytes.EqualFold()</code> \u548C <code>strings.EqualFold()</code></p><p>\u5982\u679C byte slice \u4E2D\u542B\u6709\u9A8C\u8BC1\u7528\u6237\u8EAB\u4EFD\u7684\u6570\u636E\uFF08\u5BC6\u6587\u54C8\u5E0C\u3001token \u7B49\uFF09\uFF0C\u4E0D\u5E94\u518D\u4F7F\u7528 <code>reflect.DeepEqual()</code>\u3001<code>bytes.Equal()</code>\u3001 <code>bytes.Compare()</code>\u3002\u8FD9\u4E09\u4E2A\u51FD\u6570\u5BB9\u6613\u5BF9\u7A0B\u5E8F\u9020\u6210 <a href="http://en.wikipedia.org/wiki/Timing_attack" target="_blank" rel="noopener noreferrer">timing attacks</a>\uFF0C\u6B64\u65F6\u5E94\u4F7F\u7528 &quot;crypto/subtle&quot; \u5305\u4E2D\u7684 <code>subtle.ConstantTimeCompare()</code> \u7B49\u51FD\u6570</p><ul><li><code>reflect.DeepEqual()</code> \u8BA4\u4E3A\u7A7A slice \u4E0E nil slice \u5E76\u4E0D\u76F8\u7B49\uFF0C\u4F46\u6CE8\u610F <code>byte.Equal()</code> \u4F1A\u8BA4\u4E3A\u4E8C\u8005\u76F8\u7B49\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> b1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
    b2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">// b1 \u4E0E b2 \u957F\u5EA6\u76F8\u7B49\u3001\u6709\u76F8\u540C\u7684\u5B57\u8282\u5E8F</span>
    <span class="token comment">// nil \u4E0E slice \u5728\u5B57\u8282\u4E0A\u662F\u76F8\u540C\u7684</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;b1 == b2: &quot;</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>b1<span class="token punctuation">,</span> b2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_39-\u4ECE-panic-\u4E2D\u6062\u590D" tabindex="-1">39. \u4ECE panic \u4E2D\u6062\u590D <a class="header-anchor" href="#_39-\u4ECE-panic-\u4E2D\u6062\u590D" aria-hidden="true">#</a></h3><p>\u5728\u4E00\u4E2A defer \u5EF6\u8FDF\u6267\u884C\u7684\u51FD\u6570\u4E2D\u8C03\u7528 <code>recover()</code> \uFF0C\u5B83\u4FBF\u80FD\u6355\u6349 / \u4E2D\u65AD panic</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u7684 recover \u8C03\u7528\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u4EC0\u4E48\u90FD\u4E0D\u4F1A\u6355\u6349</span>
    <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;not good&quot;</span><span class="token punctuation">)</span>    <span class="token comment">// \u53D1\u751F panic\uFF0C\u4E3B\u7A0B\u5E8F\u9000\u51FA</span>
    <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u4E0D\u4F1A\u88AB\u6267\u884C</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u7684 recover \u8C03\u7528\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;recovered: &quot;</span><span class="token punctuation">,</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;not good&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4ECE\u4E0A\u8FB9\u53EF\u4EE5\u770B\u51FA\uFF0C<code>recover()</code> \u4EC5\u5728 defer \u6267\u884C\u7684\u51FD\u6570\u4E2D\u8C03\u7528\u624D\u4F1A\u751F\u6548\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u7684\u8C03\u7528\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">doRecover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;not good&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">doRecover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;recobered: &quot;</span><span class="token punctuation">,</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>recobered: panic: not good</p><h3 id="_40-\u5728-range-\u8FED\u4EE3-slice\u3001array\u3001map-\u65F6\u901A\u8FC7\u66F4\u65B0\u5F15\u7528\u6765\u66F4\u65B0\u5143\u7D20" tabindex="-1">40. \u5728 range \u8FED\u4EE3 slice\u3001array\u3001map \u65F6\u901A\u8FC7\u66F4\u65B0\u5F15\u7528\u6765\u66F4\u65B0\u5143\u7D20 <a class="header-anchor" href="#_40-\u5728-range-\u8FED\u4EE3-slice\u3001array\u3001map-\u65F6\u901A\u8FC7\u66F4\u65B0\u5F15\u7528\u6765\u66F4\u65B0\u5143\u7D20" aria-hidden="true">#</a></h3><p>\u5728 range \u8FED\u4EE3\u4E2D\uFF0C\u5F97\u5230\u7684\u503C\u5176\u5B9E\u662F\u5143\u7D20\u7684\u4E00\u4EFD\u503C\u62F7\u8D1D\uFF0C\u66F4\u65B0\u62F7\u8D1D\u5E76\u4E0D\u4F1A\u66F4\u6539\u539F\u6765\u7684\u5143\u7D20\uFF0C\u5373\u662F\u62F7\u8D1D\u7684\u5730\u5740\u5E76\u4E0D\u662F\u539F\u6709\u5143\u7D20\u7684\u5730\u5740\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        v <span class="token operator">*=</span> <span class="token number">10</span>        <span class="token comment">// data \u4E2D\u539F\u6709\u5143\u7D20\u662F\u4E0D\u4F1A\u88AB\u4FEE\u6539\u7684</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token comment">// data:  [1 2 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u8981\u4FEE\u6539\u539F\u6709\u5143\u7D20\u7684\u503C\uFF0C\u5E94\u8BE5\u4F7F\u7528\u7D22\u5F15\u76F4\u63A5\u8BBF\u95EE\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token comment">// data:  [10 20 30]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u4F60\u7684\u96C6\u5408\u4FDD\u5B58\u7684\u662F\u6307\u5411\u503C\u7684\u6307\u9488\uFF0C\u9700\u7A0D\u4F5C\u4FEE\u6539\u3002\u4F9D\u65E7\u9700\u8981\u4F7F\u7528\u7D22\u5F15\u8BBF\u95EE\u5143\u7D20\uFF0C\u4E0D\u8FC7\u53EF\u4EE5\u4F7F\u7528 range \u51FA\u6765\u7684\u5143\u7D20\u76F4\u63A5\u66F4\u65B0\u539F\u6709\u503C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token keyword">struct</span><span class="token punctuation">{</span> num <span class="token builtin">int</span> <span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        v<span class="token punctuation">.</span>num <span class="token operator">*=</span> <span class="token number">10</span>    <span class="token comment">// \u76F4\u63A5\u4F7F\u7528\u6307\u9488\u66F4\u65B0</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// &amp;{10} &amp;{20} &amp;{30}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_41-slice-\u4E2D\u9690\u85CF\u7684\u6570\u636E" tabindex="-1">41. slice \u4E2D\u9690\u85CF\u7684\u6570\u636E <a class="header-anchor" href="#_41-slice-\u4E2D\u9690\u85CF\u7684\u6570\u636E" aria-hidden="true">#</a></h3><p>\u4ECE slice \u4E2D\u91CD\u65B0\u5207\u51FA\u65B0 slice \u65F6\uFF0C\u65B0 slice \u4F1A\u5F15\u7528\u539F slice \u7684\u5E95\u5C42\u6570\u7EC4\u3002\u5982\u679C\u8DF3\u4E86\u8FD9\u4E2A\u5751\uFF0C\u7A0B\u5E8F\u53EF\u80FD\u4F1A\u5206\u914D\u5927\u91CF\u7684\u4E34\u65F6 slice \u6765\u6307\u5411\u539F\u5E95\u5C42\u6570\u7EC4\u7684\u90E8\u5206\u6570\u636E\uFF0C\u5C06\u5BFC\u81F4\u96BE\u4EE5\u9884\u6599\u7684\u5185\u5B58\u4F7F\u7528\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">{</span>
    raw <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>raw<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 10000 10000 0xc420080000</span>
    <span class="token keyword">return</span> raw<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>    <span class="token comment">// \u91CD\u65B0\u5206\u914D\u5BB9\u91CF\u4E3A 10000 \u7684 slice</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 3 10000 0xc420080000</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u901A\u8FC7\u62F7\u8D1D\u4E34\u65F6 slice \u7684\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u91CD\u65B0\u5207\u7247\u6765\u89E3\u51B3\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    raw <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>raw<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 10000 10000 0xc420080000</span>
    res <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token function">copy</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> raw<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 3 3 0xc4200160b8</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_42-slice-\u4E2D\u6570\u636E\u7684\u8BEF\u7528" tabindex="-1">42. Slice \u4E2D\u6570\u636E\u7684\u8BEF\u7528 <a class="header-anchor" href="#_42-slice-\u4E2D\u6570\u636E\u7684\u8BEF\u7528" aria-hidden="true">#</a></h3><p>\u4E3E\u4E2A\u7B80\u5355\u4F8B\u5B50\uFF0C\u91CD\u5199\u6587\u4EF6\u8DEF\u5F84\uFF08\u5B58\u50A8\u5728 slice \u4E2D\uFF09</p><p>\u5206\u5272\u8DEF\u5F84\u6765\u6307\u5411\u6BCF\u4E2A\u4E0D\u540C\u7EA7\u7684\u76EE\u5F55\uFF0C\u4FEE\u6539\u7B2C\u4E00\u4E2A\u76EE\u5F55\u540D\u518D\u91CD\u7EC4\u5B50\u76EE\u5F55\u540D\uFF0C\u521B\u5EFA\u65B0\u8DEF\u5F84\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u4F7F\u7528 slice \u7684\u62FC\u63A5\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    path <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;AAAA/BBBBBBBBB&quot;</span><span class="token punctuation">)</span>
    sepIndex <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">IndexByte</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
    <span class="token function">println</span><span class="token punctuation">(</span>sepIndex<span class="token punctuation">)</span>

    dir1 <span class="token operator">:=</span> path<span class="token punctuation">[</span><span class="token punctuation">:</span>sepIndex<span class="token punctuation">]</span>
    dir2 <span class="token operator">:=</span> path<span class="token punctuation">[</span>sepIndex<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir1: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir1<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// AAAA</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir2: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir2<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// BBBBBBBBB</span>

    dir1 <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>dir1<span class="token punctuation">,</span> <span class="token string">&quot;suffix&quot;</span><span class="token operator">...</span><span class="token punctuation">)</span>
       <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;current path: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// AAAAsuffixBBBB</span>

    path <span class="token operator">=</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span>dir1<span class="token punctuation">,</span> dir2<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir1: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir1<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// AAAAsuffix</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir2: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir2<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// uffixBBBB</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;new path: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// AAAAsuffix/uffixBBBB    // \u9519\u8BEF\u7ED3\u679C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u62FC\u63A5\u7684\u7ED3\u679C\u4E0D\u662F\u6B63\u786E\u7684 <code>AAAAsuffix/BBBBBBBBB</code>\uFF0C\u56E0\u4E3A dir1\u3001 dir2 \u4E24\u4E2A slice \u5F15\u7528\u7684\u6570\u636E\u90FD\u662F <code>path</code> \u7684\u5E95\u5C42\u6570\u7EC4\uFF0C\u7B2C 13 \u884C\u4FEE\u6539 <code>dir1</code> \u540C\u65F6\u4E5F\u4FEE\u6539\u4E86 <code>path</code>\uFF0C\u4E5F\u5BFC\u81F4\u4E86 <code>dir2</code> \u7684\u4FEE\u6539</p><p>\u89E3\u51B3\u65B9\u6CD5\uFF1A</p><ul><li>\u91CD\u65B0\u5206\u914D\u65B0\u7684 slice \u5E76\u62F7\u8D1D\u4F60\u9700\u8981\u7684\u6570\u636E</li><li>\u4F7F\u7528\u5B8C\u6574\u7684 slice \u8868\u8FBE\u5F0F\uFF1A<code>input[low:high:max]</code>\uFF0C\u5BB9\u91CF\u4FBF\u8C03\u6574\u4E3A max - low</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528 full slice expression</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    path <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;AAAA/BBBBBBBBB&quot;</span><span class="token punctuation">)</span>
    sepIndex <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">IndexByte</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
    dir1 <span class="token operator">:=</span> path<span class="token punctuation">[</span><span class="token punctuation">:</span>sepIndex<span class="token punctuation">:</span>sepIndex<span class="token punctuation">]</span>        <span class="token comment">// \u6B64\u65F6 cap(dir1) \u6307\u5B9A\u4E3A4\uFF0C \u800C\u4E0D\u662F\u5148\u524D\u7684 16</span>
    dir2 <span class="token operator">:=</span> path<span class="token punctuation">[</span>sepIndex<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    dir1 <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>dir1<span class="token punctuation">,</span> <span class="token string">&quot;suffix&quot;</span><span class="token operator">...</span><span class="token punctuation">)</span>

    path <span class="token operator">=</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span>dir1<span class="token punctuation">,</span> dir2<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir1: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir1<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// AAAAsuffix</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dir2: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dir2<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// BBBBBBBBB</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;new path: &quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// AAAAsuffix/BBBBBBBBB</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u7B2C 6 \u884C\u4E2D\u7B2C\u4E09\u4E2A\u53C2\u6570\u662F\u7528\u6765\u63A7\u5236 dir1 \u7684\u65B0\u5BB9\u91CF\uFF0C\u518D\u5F80 dir1 \u4E2D append \u8D85\u989D\u5143\u7D20\u65F6\uFF0C\u5C06\u5206\u914D\u65B0\u7684 buffer \u6765\u4FDD\u5B58\u3002\u800C\u4E0D\u662F\u8986\u76D6\u539F\u6765\u7684 path \u5E95\u5C42\u6570\u7EC4</p><h3 id="_43-\u65E7-slice" tabindex="-1">43. \u65E7 slice <a class="header-anchor" href="#_43-\u65E7-slice" aria-hidden="true">#</a></h3><p>\u5F53\u4F60\u4ECE\u4E00\u4E2A\u5DF2\u5B58\u5728\u7684 slice \u521B\u5EFA\u65B0 slice \u65F6\uFF0C\u4E8C\u8005\u7684\u6570\u636E\u6307\u5411\u76F8\u540C\u7684\u5E95\u5C42\u6570\u7EC4\u3002\u5982\u679C\u4F60\u7684\u7A0B\u5E8F\u4F7F\u7528\u8FD9\u4E2A\u7279\u6027\uFF0C\u90A3\u9700\u8981\u6CE8\u610F &quot;\u65E7&quot;\uFF08stale\uFF09 slice \u95EE\u9898\u3002</p><p>\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u5411\u4E00\u4E2A slice \u4E2D\u8FFD\u52A0\u5143\u7D20\u800C\u5B83\u6307\u5411\u7684\u5E95\u5C42\u6570\u7EC4\u5BB9\u91CF\u4E0D\u8DB3\u65F6\uFF0C\u5C06\u4F1A\u91CD\u65B0\u5206\u914D\u4E00\u4E2A\u65B0\u6570\u7EC4\u6765\u5B58\u50A8\u6570\u636E\u3002\u800C\u5176\u4ED6 slice \u8FD8\u6307\u5411\u539F\u6765\u7684\u65E7\u5E95\u5C42\u6570\u7EC4\u3002</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u8D85\u8FC7\u5BB9\u91CF\u5C06\u91CD\u65B0\u5206\u914D\u6570\u7EC4\u6765\u62F7\u8D1D\u503C\u3001\u91CD\u65B0\u5B58\u50A8</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>    <span class="token comment">// 3 3 [1 2 3 ]</span>

    s2 <span class="token operator">:=</span> s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>    <span class="token comment">// 2 2 [2 3]</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> s2 <span class="token punctuation">{</span>
        s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">20</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6B64\u65F6\u7684 s1 \u4E0E s2 \u662F\u6307\u5411\u540C\u4E00\u4E2A\u5E95\u5C42\u6570\u7EC4\u7684</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>        <span class="token comment">// [1 22 23]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>        <span class="token comment">// [22 23]</span>

    s2 <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token comment">// \u5411\u5BB9\u91CF\u4E3A 2 \u7684 s2 \u4E2D\u518D\u8FFD\u52A0\u5143\u7D20\uFF0C\u6B64\u65F6\u5C06\u5206\u914D\u65B0\u6570\u7EC4\u6765\u5B58</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> s2 <span class="token punctuation">{</span>
        s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>        <span class="token comment">// [1 22 23]    // \u6B64\u65F6\u7684 s1 \u4E0D\u518D\u66F4\u65B0\uFF0C\u4E3A\u65E7\u6570\u636E</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>        <span class="token comment">// [32 33 14]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="_44-\u7C7B\u578B\u58F0\u660E\u4E0E\u65B9\u6CD5" tabindex="-1">44. \u7C7B\u578B\u58F0\u660E\u4E0E\u65B9\u6CD5 <a class="header-anchor" href="#_44-\u7C7B\u578B\u58F0\u660E\u4E0E\u65B9\u6CD5" aria-hidden="true">#</a></h3><p>\u4ECE\u4E00\u4E2A\u73B0\u6709\u7684\u975E interface \u7C7B\u578B\u521B\u5EFA\u65B0\u7C7B\u578B\u65F6\uFF0C\u5E76\u4E0D\u4F1A\u7EE7\u627F\u539F\u6709\u7684\u65B9\u6CD5\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u5B9A\u4E49 Mutex \u7684\u81EA\u5B9A\u4E49\u7C7B\u578B</span>
<span class="token keyword">type</span> myMutex sync<span class="token punctuation">.</span>Mutex

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> mtx myMutex
    mtx<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    mtx<span class="token punctuation">.</span><span class="token function">UnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>mtx.Lock undefined (type myMutex has no field or method Lock)...</p><p>\u5982\u679C\u4F60\u9700\u8981\u4F7F\u7528\u539F\u7C7B\u578B\u7684\u65B9\u6CD5\uFF0C\u53EF\u5C06\u539F\u7C7B\u578B\u4EE5\u533F\u540D\u5B57\u6BB5\u7684\u5F62\u5F0F\u5D4C\u5230\u4F60\u5B9A\u4E49\u7684\u65B0 struct \u4E2D\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u7C7B\u578B\u4EE5\u5B57\u6BB5\u5F62\u5F0F\u76F4\u63A5\u5D4C\u5165</span>
<span class="token keyword">type</span> myLocker <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    sync<span class="token punctuation">.</span>Mutex
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> locker myLocker
    locker<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    locker<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>interface \u7C7B\u578B\u58F0\u660E\u4E5F\u4FDD\u7559\u5B83\u7684\u65B9\u6CD5\u96C6\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> myLocker sync<span class="token punctuation">.</span>Locker

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> locker myLocker
    locker<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    locker<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_45-\u8DF3\u51FA-for-switch-\u548C-for-select-\u4EE3\u7801\u5757" tabindex="-1">45. \u8DF3\u51FA for-switch \u548C for-select \u4EE3\u7801\u5757 <a class="header-anchor" href="#_45-\u8DF3\u51FA-for-switch-\u548C-for-select-\u4EE3\u7801\u5757" aria-hidden="true">#</a></h3><p>\u6CA1\u6709\u6307\u5B9A\u6807\u7B7E\u7684 break \u53EA\u4F1A\u8DF3\u51FA switch/select \u8BED\u53E5\uFF0C\u82E5\u4E0D\u80FD\u4F7F\u7528 return \u8BED\u53E5\u8DF3\u51FA\u7684\u8BDD\uFF0C\u53EF\u4E3A break \u8DF3\u51FA\u6807\u7B7E\u6307\u5B9A\u7684\u4EE3\u7801\u5757\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// break \u914D\u5408 label \u8DF3\u51FA\u6307\u5B9A\u4EE3\u7801\u5757</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
loop<span class="token punctuation">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token boolean">true</span><span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;breaking out...&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">//break    // \u6B7B\u5FAA\u73AF\uFF0C\u4E00\u76F4\u6253\u5370 breaking out...</span>
            <span class="token keyword">break</span> loop
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;out...&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>goto</code> \u867D\u7136\u4E5F\u80FD\u8DF3\u8F6C\u5230\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u4F46\u4F9D\u65E7\u4F1A\u518D\u6B21\u8FDB\u5165 for-switch\uFF0C\u6B7B\u5FAA\u73AF\u3002</p><h3 id="_46-for-\u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u4E0E\u95ED\u5305\u51FD\u6570" tabindex="-1">46. for \u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u4E0E\u95ED\u5305\u51FD\u6570 <a class="header-anchor" href="#_46-for-\u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u4E0E\u95ED\u5305\u51FD\u6570" aria-hidden="true">#</a></h3><p>for \u8BED\u53E5\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\u5728\u6BCF\u6B21\u8FED\u4EE3\u4E2D\u90FD\u4F1A\u91CD\u7528\uFF0C\u5373 for \u4E2D\u521B\u5EFA\u7684\u95ED\u5305\u51FD\u6570\u63A5\u6536\u5230\u7684\u53C2\u6570\u59CB\u7EC8\u662F\u540C\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5728 goroutine \u5F00\u59CB\u6267\u884C\u65F6\u90FD\u4F1A\u5F97\u5230\u540C\u4E00\u4E2A\u8FED\u4EE3\u503C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA three three three</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6700\u7B80\u5355\u7684\u89E3\u51B3\u65B9\u6CD5\uFF1A\u65E0\u9700\u4FEE\u6539 goroutine \u51FD\u6570\uFF0C\u5728 for \u5185\u90E8\u4F7F\u7528\u5C40\u90E8\u53D8\u91CF\u4FDD\u5B58\u8FED\u4EE3\u503C\uFF0C\u518D\u4F20\u53C2\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        vCopy <span class="token operator">:=</span> v
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>vCopy<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA one two three</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53E6\u4E00\u4E2A\u89E3\u51B3\u65B9\u6CD5\uFF1A\u76F4\u63A5\u5C06\u5F53\u524D\u7684\u8FED\u4EE3\u503C\u4EE5\u53C2\u6570\u5F62\u5F0F\u4F20\u9012\u7ED9\u533F\u540D\u51FD\u6570\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>in <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA one two three</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6CE8\u610F\u4E0B\u8FB9\u8FD9\u4E2A\u7A0D\u590D\u6742\u7684 3 \u4E2A\u793A\u4F8B\u533A\u522B\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> field <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>field<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>field<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        <span class="token keyword">go</span> v<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA three three three</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>field<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>
        v <span class="token operator">:=</span> v
        <span class="token keyword">go</span> v<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA one two three</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>field<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">{</span>    <span class="token comment">// \u6B64\u65F6\u8FED\u4EE3\u503C v \u662F\u4E09\u4E2A\u5143\u7D20\u503C\u7684\u5730\u5740\uFF0C\u6BCF\u6B21 v \u6307\u5411\u7684\u503C\u4E0D\u540C</span>
        <span class="token keyword">go</span> v<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA one two three</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="_47-defer-\u51FD\u6570\u7684\u53C2\u6570\u503C" tabindex="-1">47. defer \u51FD\u6570\u7684\u53C2\u6570\u503C <a class="header-anchor" href="#_47-defer-\u51FD\u6570\u7684\u53C2\u6570\u503C" aria-hidden="true">#</a></h3><p>\u5BF9 defer \u5EF6\u8FDF\u6267\u884C\u7684\u51FD\u6570\uFF0C\u5B83\u7684\u53C2\u6570\u4F1A\u5728\u58F0\u660E\u65F6\u5019\u5C31\u4F1A\u6C42\u51FA\u5177\u4F53\u503C\uFF0C\u800C\u4E0D\u662F\u5728\u6267\u884C\u65F6\u624D\u6C42\u503C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u5728 defer \u51FD\u6570\u4E2D\u53C2\u6570\u4F1A\u63D0\u524D\u6C42\u503C</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;result: &quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> i <span class="token operator">*</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    i<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>result: 2</p><h3 id="_48-defer-\u51FD\u6570\u7684\u6267\u884C\u65F6\u673A" tabindex="-1">48. defer \u51FD\u6570\u7684\u6267\u884C\u65F6\u673A <a class="header-anchor" href="#_48-defer-\u51FD\u6570\u7684\u6267\u884C\u65F6\u673A" aria-hidden="true">#</a></h3><p>\u5BF9 defer \u5EF6\u8FDF\u6267\u884C\u7684\u51FD\u6570\uFF0C\u4F1A\u5728\u8C03\u7528\u5B83\u7684\u51FD\u6570\u7ED3\u675F\u65F6\u6267\u884C\uFF0C\u800C\u4E0D\u662F\u5728\u8C03\u7528\u5B83\u7684\u8BED\u53E5\u5757\u7ED3\u675F\u65F6\u6267\u884C\uFF0C\u6CE8\u610F\u533A\u5206\u5F00\u3002</p><p>\u6BD4\u5982\u5728\u4E00\u4E2A\u957F\u65F6\u95F4\u6267\u884C\u7684\u51FD\u6570\u91CC\uFF0C\u5185\u90E8 for \u5FAA\u73AF\u4E2D\u4F7F\u7528 defer \u6765\u6E05\u7406\u6BCF\u6B21\u8FED\u4EE3\u4EA7\u751F\u7684\u8D44\u6E90\u8C03\u7528\uFF0C\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u547D\u4EE4\u884C\u53C2\u6570\u6307\u5B9A\u76EE\u5F55\u540D</span>
<span class="token comment">// \u904D\u5386\u8BFB\u53D6\u76EE\u5F55\u4E0B\u7684\u6587\u4EF6</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Args<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span> <span class="token punctuation">{</span>
        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    dir <span class="token operator">:=</span> os<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    start<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Stat</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> <span class="token operator">!</span>start<span class="token punctuation">.</span><span class="token function">IsDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> targets <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
    filepath<span class="token punctuation">.</span><span class="token function">Walk</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fPath <span class="token builtin">string</span><span class="token punctuation">,</span> fInfo os<span class="token punctuation">.</span>FileInfo<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> err
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token operator">!</span>fInfo<span class="token punctuation">.</span><span class="token function">Mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsRegular</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">nil</span>
        <span class="token punctuation">}</span>

        targets <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>targets<span class="token punctuation">,</span> fPath<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> target <span class="token operator">:=</span> <span class="token keyword">range</span> targets <span class="token punctuation">{</span>
        f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;bad target:&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token comment">//error:too many open files</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">defer</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u5728\u6BCF\u6B21 for \u8BED\u53E5\u5757\u7ED3\u675F\u65F6\uFF0C\u4E0D\u4F1A\u5173\u95ED\u6587\u4EF6\u8D44\u6E90</span>

        <span class="token comment">// \u4F7F\u7528 f \u8D44\u6E90</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u5148\u521B\u5EFA 10000 \u4E2A\u6587\u4EF6\uFF1A</p><div class="language-go line-numbers-mode"><pre><code>#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash
<span class="token keyword">for</span> n in <span class="token punctuation">{</span><span class="token number">1.</span><span class="token number">.10000</span><span class="token punctuation">}</span><span class="token punctuation">;</span> do
    echo content <span class="token operator">&gt;</span> <span class="token string">&quot;file\${n}.txt&quot;</span>
done
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079519-ec32c68a-4892-4e5c-bced-cd3d864c960f.png" alt="img"></p><p>\u89E3\u51B3\u529E\u6CD5\uFF1Adefer \u5EF6\u8FDF\u6267\u884C\u7684\u51FD\u6570\u5199\u5165\u533F\u540D\u51FD\u6570\u4E2D\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u76EE\u5F55\u904D\u5386\u6B63\u5E38</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>

    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> target <span class="token operator">:=</span> <span class="token keyword">range</span> targets <span class="token punctuation">{</span>
        <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;bad target:&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>    <span class="token comment">// \u5728\u533F\u540D\u51FD\u6570\u5185\u4F7F\u7528 return \u4EE3\u66FF break \u5373\u53EF</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">defer</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u533F\u540D\u51FD\u6570\u6267\u884C\u7ED3\u675F\uFF0C\u8C03\u7528\u5173\u95ED\u6587\u4EF6\u8D44\u6E90</span>

            <span class="token comment">// \u4F7F\u7528 f \u8D44\u6E90</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u53BB\u6389 defer\uFF0C\u5728\u6587\u4EF6\u8D44\u6E90\u4F7F\u7528\u5B8C\u6BD5\u540E\uFF0C\u76F4\u63A5\u8C03\u7528 <code>f.Close()</code> \u6765\u5173\u95ED\u3002</p><h3 id="_49-\u5931\u8D25\u7684\u7C7B\u578B\u65AD\u8A00" tabindex="-1">49. \u5931\u8D25\u7684\u7C7B\u578B\u65AD\u8A00 <a class="header-anchor" href="#_49-\u5931\u8D25\u7684\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a></h3><p>\u5728\u7C7B\u578B\u65AD\u8A00\u8BED\u53E5\u4E2D\uFF0C\u65AD\u8A00\u5931\u8D25\u5219\u4F1A\u8FD4\u56DE\u76EE\u6807\u7C7B\u578B\u7684\u201C\u96F6\u503C\u201D\uFF0C\u65AD\u8A00\u53D8\u91CF\u4E0E\u539F\u6765\u53D8\u91CF\u6DF7\u7528\u53EF\u80FD\u51FA\u73B0\u5F02\u5E38\u60C5\u51B5\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;great&quot;</span>

    <span class="token comment">// data \u6DF7\u7528</span>
    <span class="token keyword">if</span> data<span class="token punctuation">,</span> ok <span class="token operator">:=</span> data<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;[is an int], data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;[not an int], data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token comment">// [isn&#39;t a int], data:  0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;great&quot;</span>

    <span class="token keyword">if</span> res<span class="token punctuation">,</span> ok <span class="token operator">:=</span> data<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;[is an int], data: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;[not an int], data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token comment">// [not an int], data:  great</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="_50-\u963B\u585E\u7684-gorutinue-\u4E0E\u8D44\u6E90\u6CC4\u9732" tabindex="-1">50. \u963B\u585E\u7684 gorutinue \u4E0E\u8D44\u6E90\u6CC4\u9732 <a class="header-anchor" href="#_50-\u963B\u585E\u7684-gorutinue-\u4E0E\u8D44\u6E90\u6CC4\u9732" aria-hidden="true">#</a></h3><p>\u5728 2012 \u5E74 Google I/O \u5927\u4F1A\u4E0A\uFF0CRob Pike \u7684 <a href="https://talks.golang.org/2012/concurrency.slide#1" target="_blank" rel="noopener noreferrer">Go Concurrency Patterns</a> \u6F14\u8BB2\u8BA8\u8BBA Go \u7684\u51E0\u79CD\u57FA\u672C\u5E76\u53D1\u6A21\u5F0F\uFF0C\u5982 <a href="https://repl.it/@pllv/Google-Search-Gorountine-Parallel-Replicas-Rob-Pike" target="_blank" rel="noopener noreferrer">\u5B8C\u6574\u4EE3\u7801</a> \u4E2D\u4ECE\u6570\u636E\u96C6\u4E2D\u83B7\u53D6\u7B2C\u4E00\u6761\u6570\u636E\u7684\u51FD\u6570\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token punctuation">[</span><span class="token punctuation">]</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    replicaSearch <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">replicaSearch</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728\u641C\u7D22\u91CD\u590D\u65F6\u4F9D\u65E7\u6BCF\u6B21\u90FD\u8D77\u4E00\u4E2A goroutine \u53BB\u5904\u7406\uFF0C\u6BCF\u4E2A goroutine \u90FD\u628A\u5B83\u7684\u641C\u7D22\u7ED3\u679C\u53D1\u9001\u5230\u7ED3\u679C channel \u4E2D\uFF0Cchannel \u4E2D\u6536\u5230\u7684\u7B2C\u4E00\u6761\u6570\u636E\u4F1A\u76F4\u63A5\u8FD4\u56DE\u3002</p><p>\u8FD4\u56DE\u5B8C\u7B2C\u4E00\u6761\u6570\u636E\u540E\uFF0C\u5176\u4ED6 goroutine \u7684\u641C\u7D22\u7ED3\u679C\u600E\u4E48\u5904\u7406\uFF1F\u4ED6\u4EEC\u81EA\u5DF1\u7684\u534F\u7A0B\u5982\u4F55\u5904\u7406\uFF1F</p><p>\u5728 <code>First()</code> \u4E2D\u7684\u7ED3\u679C channel \u662F\u65E0\u7F13\u51B2\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u53EA\u6709\u7B2C\u4E00\u4E2A goroutine \u80FD\u8FD4\u56DE\uFF0C\u7531\u4E8E\u6CA1\u6709 receiver\uFF0C\u5176\u4ED6\u7684 goroutine \u4F1A\u5728\u53D1\u9001\u4E0A\u4E00\u76F4\u963B\u585E\u3002\u5982\u679C\u4F60\u5927\u91CF\u8C03\u7528\uFF0C\u5219\u53EF\u80FD\u9020\u6210\u8D44\u6E90\u6CC4\u9732\u3002</p><p>\u4E3A\u907F\u514D\u6CC4\u9732\uFF0C\u4F60\u5E94\u8BE5\u786E\u4FDD\u6240\u6709\u7684 goroutine \u90FD\u80FD\u6B63\u786E\u9000\u51FA\uFF0C\u6709 2 \u4E2A\u89E3\u51B3\u65B9\u6CD5\uFF1A</p><ul><li>\u4F7F\u7528\u5E26\u7F13\u51B2\u7684 channel\uFF0C\u786E\u4FDD\u80FD\u63A5\u6536\u5168\u90E8 goroutine \u7684\u8FD4\u56DE\u7ED3\u679C\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>replicas<span class="token punctuation">)</span><span class="token punctuation">)</span>
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u4F7F\u7528 <code>select</code> \u8BED\u53E5\uFF0C\u914D\u5408\u80FD\u4FDD\u5B58\u4E00\u4E2A\u7F13\u51B2\u503C\u7684 channel <code>default</code> \u8BED\u53E5\uFF1A <code>default</code> \u7684\u7F13\u51B2 channel \u4FDD\u8BC1\u4E86\u5373\u4F7F\u7ED3\u679C channel \u6536\u4E0D\u5230\u6570\u636E\uFF0C\u4E5F\u4E0D\u4F1A\u963B\u585E goroutine</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u4F7F\u7528\u7279\u6B8A\u7684\u5E9F\u5F03\uFF08cancellation\uFF09 channel \u6765\u4E2D\u65AD\u5269\u4F59 goroutine \u7684\u6267\u884C\uFF1A</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    done <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> <span class="token function">close</span><span class="token punctuation">(</span>done<span class="token punctuation">)</span>
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span> done<span class="token punctuation">:</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>Rob Pike \u4E3A\u4E86\u7B80\u5316\u6F14\u793A\uFF0C\u6CA1\u6709\u63D0\u53CA\u6F14\u8BB2\u4EE3\u7801\u4E2D\u5B58\u5728\u7684\u8FD9\u4E9B\u95EE\u9898\u3002\u4E0D\u8FC7\u5BF9\u4E8E\u65B0\u624B\u6765\u8BF4\uFF0C\u53EF\u80FD\u4F1A\u4E0D\u52A0\u601D\u8003\u76F4\u63A5\u4F7F\u7528\u3002</p><h2 id="\u9AD8\u7EA7\u7BC7\uFF1A51-57" tabindex="-1">\u9AD8\u7EA7\u7BC7\uFF1A51-57 <a class="header-anchor" href="#\u9AD8\u7EA7\u7BC7\uFF1A51-57" aria-hidden="true">#</a></h2><h3 id="_51-\u4F7F\u7528\u6307\u9488\u4F5C\u4E3A\u65B9\u6CD5\u7684-receiver" tabindex="-1">51. \u4F7F\u7528\u6307\u9488\u4F5C\u4E3A\u65B9\u6CD5\u7684 receiver <a class="header-anchor" href="#_51-\u4F7F\u7528\u6307\u9488\u4F5C\u4E3A\u65B9\u6CD5\u7684-receiver" aria-hidden="true">#</a></h3><p>\u53EA\u8981\u503C\u662F\u53EF\u5BFB\u5740\u7684\uFF0C\u5C31\u53EF\u4EE5\u5728\u503C\u4E0A\u76F4\u63A5\u8C03\u7528\u6307\u9488\u65B9\u6CD5\u3002\u5373\u662F\u5BF9\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5B83\u7684 receiver \u662F\u6307\u9488\u5C31\u8DB3\u77E3\u3002</p><p>\u4F46\u4E0D\u662F\u6240\u6709\u503C\u90FD\u662F\u53EF\u5BFB\u5740\u7684\uFF0C\u6BD4\u5982 map \u7C7B\u578B\u7684\u5143\u7D20\u3001\u901A\u8FC7 interface \u5F15\u7528\u7684\u53D8\u91CF\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> printer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>data<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;name: &quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    d1 <span class="token operator">:=</span> data<span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">}</span>
    d1<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// d1 \u53D8\u91CF\u53EF\u5BFB\u5740\uFF0C\u53EF\u76F4\u63A5\u8C03\u7528\u6307\u9488 receiver \u7684\u65B9\u6CD5</span>

    <span class="token keyword">var</span> in printer <span class="token operator">=</span> data<span class="token punctuation">{</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">}</span>
    in<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u7C7B\u578B\u4E0D\u5339\u914D</span>

    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>data<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> data<span class="token punctuation">{</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// m[&quot;x&quot;] \u662F\u4E0D\u53EF\u5BFB\u5740\u7684    // \u53D8\u52A8\u9891\u7E41</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>cannot use data literal (type data) as type printer in assignment:</p><p>data does not implement printer (print method has pointer receiver)</p><p>cannot call pointer method on m[&quot;x&quot;]</p><p>cannot take the address of m[&quot;x&quot;]</p><h3 id="_52-\u66F4\u65B0-map-\u5B57\u6BB5\u7684\u503C" tabindex="-1">52. \u66F4\u65B0 map \u5B57\u6BB5\u7684\u503C <a class="header-anchor" href="#_52-\u66F4\u65B0-map-\u5B57\u6BB5\u7684\u503C" aria-hidden="true">#</a></h3><p>\u5982\u679C map \u4E00\u4E2A\u5B57\u6BB5\u7684\u503C\u662F struct \u7C7B\u578B\uFF0C\u5219\u65E0\u6CD5\u76F4\u63A5\u66F4\u65B0\u8BE5 struct \u7684\u5355\u4E2A\u5B57\u6BB5\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u65E0\u6CD5\u76F4\u63A5\u66F4\u65B0 struct \u7684\u5B57\u6BB5\u503C</span>
<span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>data<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Jerry&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>cannot assign to struct field m[&quot;x&quot;].name in map</p><p>\u56E0\u4E3A map \u4E2D\u7684\u5143\u7D20\u662F\u4E0D\u53EF\u5BFB\u5740\u7684\u3002\u9700\u533A\u5206\u5F00\u7684\u662F\uFF0Cslice \u7684\u5143\u7D20\u53EF\u5BFB\u5740\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>data<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Jerry&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token comment">// [{Jerry}]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\uFF1A\u4E0D\u4E45\u524D gccgo \u7F16\u8BD1\u5668\u53EF\u66F4\u65B0 map struct \u5143\u7D20\u7684\u5B57\u6BB5\u503C\uFF0C\u4E0D\u8FC7\u5F88\u5FEB\u4FBF\u4FEE\u590D\u4E86\uFF0C\u5B98\u65B9\u8BA4\u4E3A\u662F Go1.3 \u7684\u6F5C\u5728\u7279\u6027\uFF0C\u65E0\u9700\u53CA\u65F6\u5B9E\u73B0\uFF0C\u4F9D\u65E7\u5728 todo list \u4E2D\u3002</p><p>\u66F4\u65B0 map \u4E2D struct \u5143\u7D20\u7684\u5B57\u6BB5\u503C\uFF0C\u6709 2 \u4E2A\u65B9\u6CD5\uFF1A</p><ul><li>\u4F7F\u7528\u5C40\u90E8\u53D8\u91CF</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u63D0\u53D6\u6574\u4E2A struct \u5230\u5C40\u90E8\u53D8\u91CF\u4E2D\uFF0C\u4FEE\u6539\u5B57\u6BB5\u503C\u540E\u518D\u6574\u4E2A\u8D4B\u503C</span>
<span class="token keyword">type</span> data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>data<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    r <span class="token operator">:=</span> m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span>
    r<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Jerry&quot;</span>
    m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> r
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token comment">// map[x:{Jerry}]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u4F7F\u7528\u6307\u5411\u5143\u7D20\u7684 map \u6307\u9488</li></ul><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>data<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Jerry&quot;</span>    <span class="token comment">// \u76F4\u63A5\u4FEE\u6539 m[&quot;x&quot;] \u4E2D\u7684\u5B57\u6BB5</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// &amp;{Jerry}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F46\u662F\u8981\u6CE8\u610F\u4E0B\u8FB9\u8FD9\u79CD\u8BEF\u7528\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>data<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">[</span><span class="token string">&quot;z&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;what???&quot;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>panic: runtime error: invalid memory address or nil pointer dereference</p><h3 id="_53-nil-interface-\u548C-nil-interface-\u503C" tabindex="-1">53. nil interface \u548C nil interface \u503C <a class="header-anchor" href="#_53-nil-interface-\u548C-nil-interface-\u503C" aria-hidden="true">#</a></h3><p>\u867D\u7136 interface \u770B\u8D77\u6765\u50CF\u6307\u9488\u7C7B\u578B\uFF0C\u4F46\u5B83\u4E0D\u662F\u3002interface \u7C7B\u578B\u7684\u53D8\u91CF\u53EA\u6709\u5728\u7C7B\u578B\u548C\u503C\u5747\u4E3A nil \u65F6\u624D\u4E3A nil</p><p>\u5982\u679C\u4F60\u7684 interface \u53D8\u91CF\u7684\u503C\u662F\u8DDF\u968F\u5176\u4ED6\u53D8\u91CF\u53D8\u5316\u7684\uFF08\u96FE\uFF09\uFF0C\u4E0E nil \u6BD4\u8F83\u76F8\u7B49\u65F6\u5C0F\u5FC3\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">*</span><span class="token builtin">byte</span>
    <span class="token keyword">var</span> in <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> data <span class="token operator">==</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    <span class="token comment">// &lt;nil&gt; true</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> in <span class="token operator">==</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    <span class="token comment">// &lt;nil&gt; true</span>

    in <span class="token operator">=</span> data
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> in <span class="token operator">==</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    <span class="token comment">// &lt;nil&gt; false    // data \u503C\u4E3A nil\uFF0C\u4F46 in \u503C\u4E0D\u4E3A nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u679C\u4F60\u7684\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u662F interface\uFF0C\u66F4\u8981\u5C0F\u5FC3\u8FD9\u4E2A\u5751\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    doIt <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>arg <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">*</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
        <span class="token keyword">if</span> arg <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> res <span class="token operator">:=</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> res <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Good result: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>    <span class="token comment">// Good result:  &lt;nil&gt;</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>            <span class="token comment">// *struct {}    // res \u4E0D\u662F nil\uFF0C\u5B83\u7684\u503C\u4E3A nil</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>            <span class="token comment">// &lt;nil&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u786E\u793A\u4F8B</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    doIt <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>arg <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">*</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
        <span class="token keyword">if</span> arg <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token comment">// \u660E\u786E\u6307\u660E\u8FD4\u56DE nil</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> res <span class="token operator">:=</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> res <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Good result: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Bad result: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>    <span class="token comment">// Bad result:  &lt;nil&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="_54-\u5806\u6808\u53D8\u91CF" tabindex="-1">54. \u5806\u6808\u53D8\u91CF <a class="header-anchor" href="#_54-\u5806\u6808\u53D8\u91CF" aria-hidden="true">#</a></h3><p>\u4F60\u5E76\u4E0D\u603B\u662F\u6E05\u695A\u4F60\u7684\u53D8\u91CF\u662F\u5206\u914D\u5230\u4E86\u5806\u8FD8\u662F\u6808\u3002</p><p>\u5728 C++ \u4E2D\u4F7F\u7528 <code>new</code> \u521B\u5EFA\u7684\u53D8\u91CF\u603B\u662F\u5206\u914D\u5230\u5806\u5185\u5B58\u4E0A\u7684\uFF0C\u4F46\u5728 Go \u4E2D\u5373\u4F7F\u4F7F\u7528 <code>new()</code>\u3001<code>make()</code> \u6765\u521B\u5EFA\u53D8\u91CF\uFF0C\u53D8\u91CF\u4E3A\u5185\u5B58\u5206\u914D\u4F4D\u7F6E\u4F9D\u65E7\u5F52 Go \u7F16\u8BD1\u5668\u7BA1\u3002</p><p>Go \u7F16\u8BD1\u5668\u4F1A\u6839\u636E\u53D8\u91CF\u7684\u5927\u5C0F\u53CA\u5176 &quot;escape analysis&quot; \u7684\u7ED3\u679C\u6765\u51B3\u5B9A\u53D8\u91CF\u7684\u5B58\u50A8\u4F4D\u7F6E\uFF0C\u6545\u80FD\u51C6\u786E\u8FD4\u56DE\u672C\u5730\u53D8\u91CF\u7684\u5730\u5740\uFF0C\u8FD9\u5728 C/C++ \u4E2D\u662F\u4E0D\u884C\u7684\u3002</p><p>\u5728 go build \u6216 go run \u65F6\uFF0C\u52A0\u5165 -m \u53C2\u6570\uFF0C\u80FD\u51C6\u786E\u5206\u6790\u7A0B\u5E8F\u7684\u53D8\u91CF\u5206\u914D\u4F4D\u7F6E\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079583-c6b22446-874e-41ce-8898-39d36c0881b5.png" alt="img"></p><h3 id="_55-gomaxprocs\u3001concurrency\uFF08\u5E76\u53D1\uFF09and-parallelism\uFF08\u5E76\u884C\uFF09" tabindex="-1">55. GOMAXPROCS\u3001Concurrency\uFF08\u5E76\u53D1\uFF09and Parallelism\uFF08\u5E76\u884C\uFF09 <a class="header-anchor" href="#_55-gomaxprocs\u3001concurrency\uFF08\u5E76\u53D1\uFF09and-parallelism\uFF08\u5E76\u884C\uFF09" aria-hidden="true">#</a></h3><p>Go 1.4 \u53CA\u4EE5\u4E0B\u7248\u672C\uFF0C\u7A0B\u5E8F\u53EA\u4F1A\u4F7F\u7528 1 \u4E2A\u6267\u884C\u4E0A\u4E0B\u6587 / OS \u7EBF\u7A0B\uFF0C\u5373\u4EFB\u4F55\u65F6\u95F4\u90FD\u6700\u591A\u53EA\u6709 1 \u4E2A goroutine \u5728\u6267\u884C\u3002</p><p>Go 1.5 \u7248\u672C\u5C06\u53EF\u6267\u884C\u4E0A\u4E0B\u6587\u7684\u6570\u91CF\u8BBE\u7F6E\u4E3A <code>runtime.NumCPU()</code> \u8FD4\u56DE\u7684\u903B\u8F91 CPU \u6838\u5FC3\u6570\uFF0C\u8FD9\u4E2A\u6570\u4E0E\u7CFB\u7EDF\u5B9E\u9645\u603B\u7684 CPU \u903B\u8F91\u6838\u5FC3\u6570\u662F\u5426\u4E00\u81F4\uFF0C\u53D6\u51B3\u4E8E\u4F60\u7684 CPU \u5206\u914D\u7ED9\u7A0B\u5E8F\u7684\u6838\u5FC3\u6570\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>GOMAXPROCS</code> \u73AF\u5883\u53D8\u91CF\u6216\u8005\u52A8\u6001\u7684\u4F7F\u7528 <code>runtime.GOMAXPROCS()</code> \u6765\u8C03\u6574\u3002</p><p>\u8BEF\u533A\uFF1A<code>GOMAXPROCS</code> \u8868\u793A\u6267\u884C goroutine \u7684 CPU \u6838\u5FC3\u6570\uFF0C\u53C2\u8003<a href="https://golang.org/pkg/runtime/" target="_blank" rel="noopener noreferrer">\u6587\u6863</a></p><p><code>GOMAXPROCS</code> \u7684\u503C\u662F\u53EF\u4EE5\u8D85\u8FC7 CPU \u7684\u5B9E\u9645\u6570\u91CF\u7684\uFF0C\u5728 1.5 \u4E2D\u6700\u5927\u4E3A 256</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 4</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">NumCPU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 4</span>
    runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 20</span>
    runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// Go 1.9.2 // 300</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_56-\u8BFB\u5199\u64CD\u4F5C\u7684\u91CD\u65B0\u6392\u5E8F" tabindex="-1">56. \u8BFB\u5199\u64CD\u4F5C\u7684\u91CD\u65B0\u6392\u5E8F <a class="header-anchor" href="#_56-\u8BFB\u5199\u64CD\u4F5C\u7684\u91CD\u65B0\u6392\u5E8F" aria-hidden="true">#</a></h3><p>Go \u53EF\u80FD\u4F1A\u91CD\u6392\u4E00\u4E9B\u64CD\u4F5C\u7684\u6267\u884C\u987A\u5E8F\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u5728\u4E00\u4E2A goroutine \u4E2D\u64CD\u4F5C\u662F\u987A\u5E8F\u6267\u884C\u7684\uFF0C\u4F46\u4E0D\u4FDD\u8BC1\u591A goroutine \u7684\u6267\u884C\u987A\u5E8F\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">var</span> <span class="token boolean">_</span> <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token function">u1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">=</span> <span class="token number">1</span>
    b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">u2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">=</span> <span class="token number">3</span>
    b <span class="token operator">=</span> <span class="token number">4</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">go</span> <span class="token function">u1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u591A\u4E2A goroutine \u7684\u6267\u884C\u987A\u5E8F\u4E0D\u5B9A</span>
    <span class="token keyword">go</span> <span class="token function">u2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079530-1ec1022c-6083-4b1a-93fd-982ef37ae959.png" alt="img"></p><p>\u5982\u679C\u4F60\u60F3\u4FDD\u6301\u591A goroutine \u50CF\u4EE3\u7801\u4E2D\u7684\u90A3\u6837\u987A\u5E8F\u6267\u884C\uFF0C\u53EF\u4EE5\u4F7F\u7528 channel \u6216 sync \u5305\u4E2D\u7684\u9501\u673A\u5236\u7B49\u3002</p><h3 id="_57-\u4F18\u5148\u8C03\u5EA6" tabindex="-1">57. \u4F18\u5148\u8C03\u5EA6 <a class="header-anchor" href="#_57-\u4F18\u5148\u8C03\u5EA6" aria-hidden="true">#</a></h3><p>\u4F60\u7684\u7A0B\u5E8F\u53EF\u80FD\u51FA\u73B0\u4E00\u4E2A goroutine \u5728\u8FD0\u884C\u65F6\u963B\u6B62\u4E86\u5176\u4ED6 goroutine \u7684\u8FD0\u884C\uFF0C\u6BD4\u5982\u7A0B\u5E8F\u4E2D\u6709\u4E00\u4E2A\u4E0D\u8BA9\u8C03\u5EA6\u5668\u8FD0\u884C\u7684 <code>for</code> \u5FAA\u73AF\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    done <span class="token operator">:=</span> <span class="token boolean">false</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        done <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token operator">!</span>done <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;done !&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>for</code> \u7684\u5FAA\u73AF\u4F53\u4E0D\u5FC5\u4E3A\u7A7A\uFF0C\u4F46\u5982\u679C\u4EE3\u7801\u4E0D\u4F1A\u89E6\u53D1\u8C03\u5EA6\u5668\u6267\u884C\uFF0C\u5C06\u51FA\u73B0\u95EE\u9898\u3002</p><p>\u8C03\u5EA6\u5668\u4F1A\u5728 GC\u3001Go \u58F0\u660E\u3001\u963B\u585E channel\u3001\u963B\u585E\u7CFB\u7EDF\u8C03\u7528\u548C\u9501\u64CD\u4F5C\u540E\u518D\u6267\u884C\uFF0C\u4E5F\u4F1A\u5728\u975E\u5185\u8054\u51FD\u6570\u8C03\u7528\u65F6\u6267\u884C\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    done <span class="token operator">:=</span> <span class="token boolean">false</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        done <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token operator">!</span>done <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;not done !&quot;</span><span class="token punctuation">)</span>    <span class="token comment">// \u5E76\u4E0D\u5185\u8054\u6267\u884C</span>
    <span class="token punctuation">}</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;done !&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53EF\u4EE5\u6DFB\u52A0 <code>-m</code> \u53C2\u6570\u6765\u5206\u6790 <code>for</code> \u4EE3\u7801\u5757\u4E2D\u8C03\u7528\u7684\u5185\u8054\u51FD\u6570\uFF1A</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/106947/1575377079553-0bfc962d-ba49-426c-b720-43d42581d3af.png" alt="img"></p><p>\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528 runtime \u5305\u4E2D\u7684 <code>Gosched()</code> \u6765 \u624B\u52A8\u542F\u52A8\u8C03\u5EA6\u5668\uFF1A</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    done <span class="token operator">:=</span> <span class="token boolean">false</span>

    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        done <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token operator">!</span>done <span class="token punctuation">{</span>
        runtime<span class="token punctuation">.</span><span class="token function">Gosched</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;done !&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>__VP_STATIC_END__`,403);function c(l,u,i,r,k,b){return t(),s("div",null,[a(`
 * @Author: lgy
 * @Date: 2022-01-11 18:21:55
 * @LastEditors: lgy
 * @LastEditTime: 2022-01-26 11:42:48
 * @Description: \u8BF7\u586B\u5199\u7B80\u4ECB
`),o])}var f=n(e,[["render",c]]);export{d as __pageData,f as default};
