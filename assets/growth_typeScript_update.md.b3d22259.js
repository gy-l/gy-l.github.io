import{_ as a,c as p,a as n,b as s,o as e}from"./app.2ef81f74.js";const y='{"title":"\u5B9E\u7528\u7684 Typescript \u6280\u5DE7","description":"","frontmatter":{},"headers":[{"level":2,"title":"keyof","slug":"keyof"},{"level":2,"title":"Required & Partial & Pick","slug":"required-partial-pick"},{"level":2,"title":"Condition Type","slug":"condition-type"},{"level":2,"title":"never & Exclude & Extract & Omit","slug":"never-exclude-extract-omit"},{"level":2,"title":"typeof","slug":"typeof"},{"level":2,"title":"\u904D\u5386\u5C5E\u6027 in","slug":"\u904D\u5386\u5C5E\u6027-in"},{"level":2,"title":"is","slug":"is"},{"level":2,"title":"interface & type","slug":"interface-type"},{"level":2,"title":"Record & Dictionary & Many","slug":"record-dictionary-many"},{"level":2,"title":"infer & Return Type & Parameters Type","slug":"infer-return-type-parameters-type"},{"level":2,"title":"\u4F7F\u7528 const enum \u7EF4\u62A4\u5E38\u91CF\u8868","slug":"\u4F7F\u7528-const-enum-\u7EF4\u62A4\u5E38\u91CF\u8868"},{"level":2,"title":"VS Code Tips & Typescript Command","slug":"vs-code-tips-typescript-command"},{"level":2,"title":"Typescript Roadmap","slug":"typescript-roadmap"},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003"}],"relativePath":"growth/typeScript/update.md","lastUpdated":1636687898744}',t={},o=s('<h1 id="\u5B9E\u7528\u7684-typescript-\u6280\u5DE7" tabindex="-1">\u5B9E\u7528\u7684 Typescript \u6280\u5DE7 <a class="header-anchor" href="#\u5B9E\u7528\u7684-typescript-\u6280\u5DE7" aria-hidden="true">#</a></h1><p>\u5728\u5927\u578B\u9879\u76EE\u4E2D <code>typescript</code> \u7684\u5FC5\u8981\u6027\u8D8A\u6765\u8D8A\u9AD8\uFF0C\u5B83\u80FD\u591F\u63D0\u524D\u5728\u7F16\u8BD1\u671F\u907F\u514D\u8BB8\u591A bug\uFF0C\u5F88\u597D\u7684\u4EE3\u7801\u63D0\u793A\uFF0C\u6240\u6709\u4F9D\u8D56\u4EBA\u4E3A\u7EA6\u675F\u7684\u65B9\u6848\u90FD\u5F88\u96BE\u907F\u514D\u7531\u4E8E\u4EBA\u7684\u758F\u5FFD\u5BFC\u81F4\u7684<code>bug</code>\uFF0CTs\u80FD\u8F83\u597D\u7684\u4ECE\u4EE3\u7801\u4E60\u60EF\u4E0A\u7EA6\u675F\u56E2\u961F\u5F00\u53D1\u4E60\u60EF\uFF0C\u964D\u4F4E\u4EE3\u7801\u7684\u7EF4\u62A4\u6210\u672C\uFF0C\u5B66\u4E60 <code>ts</code> \u5DF2\u662F\u52BF\u5728\u5FC5\u884C\u3002</p><p>\u4EE5\u4E0B\u662F\u5DE5\u4F5C\u4E2D\u603B\u7ED3\u5230\u7684\u6BD4\u8F83\u5B9E\u7528\u7684 <code>typescript</code> \u6280\u5DE7\u3002</p>',3),c=s(`<h2 id="keyof" tabindex="-1">keyof <a class="header-anchor" href="#keyof" aria-hidden="true">#</a></h2><p><code>keyof</code> \u4E0E <code>Object.keys</code> \u7565\u6709\u76F8\u4F3C\uFF0C\u53EA\u4E0D\u8FC7 <code>keyof</code> \u53D6 <code>interface</code> \u7684\u952E\u3002</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u76F8\u5F53\u4E8E:</span>
<span class="token comment">// type keys = &quot;x&quot; | &quot;y&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">keys</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Point<span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5047\u8BBE\u6709\u4E00\u4E2A <code>object</code> \u5982\u4E0B\u6240\u793A\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 <code>typescript</code> \u5B9E\u73B0\u4E00\u4E2A <code>get</code> \u51FD\u6570\u6765\u83B7\u53D6\u5B83\u7684\u5C5E\u6027\u503C</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  hello<span class="token operator">:</span> <span class="token string">&#39;world&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>o<span class="token operator">:</span> object<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6211\u4EEC\u521A\u5F00\u59CB\u53EF\u80FD\u4F1A\u8FD9\u4E48\u5199\uFF0C\u4E0D\u8FC7\u5B83\u6709\u5F88\u591A\u7F3A\u70B9</p><ol><li>\u65E0\u6CD5\u786E\u8BA4\u8FD4\u56DE\u7C7B\u578B\uFF1A\u8FD9\u5C06\u635F\u5931 ts \u6700\u5927\u7684\u7C7B\u578B\u6821\u9A8C\u529F\u80FD</li><li>\u65E0\u6CD5\u5BF9 key \u505A\u7EA6\u675F\uFF1A\u53EF\u80FD\u4F1A\u72AF\u62FC\u5199\u9519\u8BEF\u7684\u95EE\u9898</li></ol><p>\u8FD9\u65F6\u53EF\u4EE5\u4F7F\u7528 <code>keyof</code> \u6765\u52A0\u5F3A <code>get</code> \u51FD\u6570\u7684\u7C7B\u578B\u529F\u80FD\uFF0C\u6709\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u770B\u770B <code>_.get</code> \u7684 type \u6807\u8BB0\u4EE5\u53CA\u5B9E\u73B0</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9\u4E8E <code>keyof</code>\uFF0C\u53E6\u4E00\u4E2A\u597D\u7528\u7684\u5C0F\u6280\u5DE7\u662F <code>keyof any</code>\uFF0C\u8BF7\u770B\u4EE5\u4E0B\u793A\u4F8B</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u4EE5\u4E0B\u4E24\u8005\u7B49\u6548\uFF0C\u4F46\u9002\u7528 keyof \u66F4\u52A0\u7B80\u77ED</span>
<span class="token keyword">type</span> <span class="token class-name">PropertyName</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">PropertyName</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="required-partial-pick" tabindex="-1">Required &amp; Partial &amp; Pick <a class="header-anchor" href="#required-partial-pick" aria-hidden="true">#</a></h2><p>\u65E2\u7136\u4E86\u89E3\u4E86 <code>keyof</code>\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5B83\u5BF9\u5C5E\u6027\u505A\u4E00\u4E9B\u6269\u5C55\uFF0C \u5982\u5B9E\u73B0 <code>Partial</code> \u548C <code>Pick</code>\uFF0C<code>Pick</code> \u4E00\u822C\u7528\u5728 <code>_.pick</code> \u4E2D</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Required<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: type PartialUser = { id?: number; age?: number; name?: string; }</span>
<span class="token keyword">type</span> <span class="token class-name">PartialUser</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: type PickUser = { id: number; age: number; }</span>
<span class="token keyword">type</span> <span class="token class-name">PickUser</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p><code>Pick</code>\u3001<code>Required</code>\u3001<code>Partial</code> \u8FD9\u51E0\u4E2A\u7C7B\u578B\u5DF2\u5185\u7F6E\u5728 Typescript \u4E2D\u539F\u751F\u5B9E\u73B0</p></blockquote><h2 id="condition-type" tabindex="-1">Condition Type <a class="header-anchor" href="#condition-type" aria-hidden="true">#</a></h2><p>\u7C7B\u4F3C\u4E8E js \u4E2D\u7684 <code>?:</code> \u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5B83\u6269\u5C55\u4E00\u4E9B\u57FA\u672C\u7C7B\u578B</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">type</span> <span class="token class-name">isTrue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>

<span class="token comment">// \u76F8\u5F53\u4E8E type t = false</span>
<span class="token keyword">type</span> <span class="token class-name">t</span> <span class="token operator">=</span> isTrue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E type t = false</span>
<span class="token keyword">type</span> <span class="token class-name">t</span> <span class="token operator">=</span> isTrue<span class="token operator">&lt;</span><span class="token boolean">false</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="never-exclude-extract-omit" tabindex="-1">never &amp; Exclude &amp; Extract &amp; Omit <a class="header-anchor" href="#never-exclude-extract-omit" aria-hidden="true">#</a></h2><p>\u5B98\u65B9\u6587\u6863\u5BF9 <code>never</code> \u7684\u63CF\u8FF0\u5982\u4E0B</p><blockquote><p>the never type represents the type of values that never occur.</p></blockquote><p>\u7ED3\u5408 <code>never</code> \u4E0E <code>conditional type</code> \u53EF\u4EE5\u63A8\u51FA\u5F88\u591A\u6709\u610F\u601D\u800C\u4E14\u5B9E\u7528\u7684\u7C7B\u578B\uFF0C\u6BD4\u5982 <code>Exclude</code> \u4E0E <code>Extract</code></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">type</span> <span class="token class-name">Exclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: type A = &#39;a&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;y&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;z&#39;</span><span class="token operator">&gt;</span>

<span class="token comment">// \u4E0E Exclude \u5B9E\u73B0\u521A\u597D\u76F8\u53CD\uFF0CExclude \u53D6\u5DEE\u96C6\uFF0C\u800C Extract \u53D6\u4EA4\u96C6</span>
<span class="token keyword">type</span> <span class="token class-name">Extract<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: type A = &#39;x&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u7ED3\u5408 <code>Exclude</code> \u63A8\u51FA <code>Omit</code> \u7684\u5199\u6CD5</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">type</span> <span class="token class-name">Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: type PickUser = { age: number; name: string; }</span>
<span class="token keyword">type</span> <span class="token class-name">OmitUser</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>Exclude</code>\u3001<code>Extract</code>\u3001<code>Omit</code> \u8FD9\u51E0\u4E2A\u7C7B\u578B\u5DF2\u5185\u7F6E\u5728 Typescript \u4E2D\u539F\u751F\u5B9E\u73B0</p></blockquote><h2 id="typeof" tabindex="-1">typeof <a class="header-anchor" href="#typeof" aria-hidden="true">#</a></h2><p>\u987E\u540D\u601D\u4E49\uFF0C<code>typeof</code> \u4EE3\u8868\u53D6\u67D0\u4E2A\u503C\u7684 type\uFF0C\u53EF\u4EE5\u4ECE\u4EE5\u4E0B\u793A\u4F8B\u6765\u5C55\u793A\u4ED6\u4EEC\u7684\u7528\u6CD5</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">3</span>

<span class="token comment">// \u76F8\u5F53\u4E8E: const b: number = 4</span>
<span class="token keyword">const</span> b<span class="token operator">:</span> <span class="token keyword">typeof</span> a <span class="token operator">=</span> <span class="token number">4</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u4E00\u4E2A\u5178\u578B\u7684\u670D\u52A1\u7AEF\u9879\u76EE\u4E2D\uFF0C\u6211\u4EEC\u7ECF\u5E38\u9700\u8981\u628A\u4E00\u4E9B\u5DE5\u5177\u585E\u5230 <code>context</code> \u4E2D\uFF0C\u5982config\uFF0Clogger\uFF0Cdb models, utils \u7B49\uFF0C\u6B64\u65F6\u5C31\u4F7F\u7528\u5230 <code>typeof</code>\u3002</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">import</span> logger <span class="token keyword">from</span> <span class="token string">&#39;./logger&#39;</span>
<span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">Context</span> <span class="token keyword">extends</span> <span class="token class-name">KoaContect</span> <span class="token punctuation">{</span>
  logger<span class="token operator">:</span> <span class="token keyword">typeof</span> logger<span class="token punctuation">,</span>
  utils<span class="token operator">:</span> <span class="token keyword">typeof</span> utils
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> Context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A logger.ts \u4E2D\u6CA1\u6709\u66B4\u9732\u6B64\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6700\u5927\u9650\u5EA6\u7684\u907F\u514D\u62FC\u5199\u9519\u8BEF</span>
  ctx<span class="token punctuation">.</span>loger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u904D\u5386\u5C5E\u6027-in" tabindex="-1">\u904D\u5386\u5C5E\u6027 in <a class="header-anchor" href="#\u904D\u5386\u5C5E\u6027-in" aria-hidden="true">#</a></h2><p>in \u53EA\u80FD\u7528\u5728\u7C7B\u578B\u7684\u5B9A\u4E49\u4E2D\uFF0C\u53EF\u4EE5\u5BF9\u679A\u4E3E\u7C7B\u578B\u8FDB\u884C\u904D\u5386\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u8FD9\u4E2A\u7C7B\u578B\u53EF\u4EE5\u5C06\u4EFB\u4F55\u7C7B\u578B\u7684\u952E\u503C\u8F6C\u5316\u6210number\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">TypeToNumber<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>keyof</code>\u8FD4\u56DE\u6CDB\u578B <code>T </code>\u7684\u6240\u6709\u952E\u679A\u4E3E\u7C7B\u578B\uFF0C<code>key</code>\u662F\u81EA\u5B9A\u4E49\u7684\u4EFB\u4F55\u53D8\u91CF\u540D\uFF0C\u4E2D\u95F4\u7528<code>in</code>\u94FE\u63A5\uFF0C\u5916\u56F4\u7528[]\u5305\u88F9\u8D77\u6765(\u8FD9\u4E2A\u662F\u56FA\u5B9A\u642D\u914D)\uFF0C\u5192\u53F7\u53F3\u4FA7<code>number</code>\u5C06\u6240\u6709\u7684<code>key</code>\u5B9A\u4E49\u4E3A<code>number</code>\u7C7B\u578B\u3002</p><p>\u4E8E\u662F\u53EF\u4EE5\u8FD9\u6837\u4F7F\u7528\u4E86\uFF1A</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">const</span> obj<span class="token operator">:</span> TypeToNumber<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u603B\u7ED3\u8D77\u6765 <code>in</code> \u7684\u8BED\u6CD5\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token punctuation">[</span> \u81EA\u5B9A\u4E49\u53D8\u91CF\u540D <span class="token keyword">in</span> \u679A\u4E3E\u7C7B\u578B <span class="token punctuation">]</span><span class="token operator">:</span> \u7C7B\u578B

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="is" tabindex="-1">is <a class="header-anchor" href="#is" aria-hidden="true">#</a></h2><p>\u5728\u6B64\u4E4B\u524D\uFF0C\u5148\u770B\u4E00\u4E2A <code>koa</code> \u7684\u9519\u8BEF\u5904\u7406\u6D41\u7A0B\uFF0C\u4EE5\u4E0B\u662F\u5BF9 <code>error</code> \u8FDB\u884C\u96C6\u4E2D\u5904\u7406\uFF0C\u5E76\u4E14\u6807\u8BC6 <code>code</code> \u7684\u8FC7\u7A0B</p><div class="language-typescript line-numbers-mode"><pre><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;BAD_REQUEST&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>isAxiosError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">Sequelize</span><span class="token punctuation">.</span>BaseError<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      code
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5728 <code>err.code</code> \u5904\uFF0C\u4F1A\u7F16\u8BD1\u51FA\u9519\uFF0C\u63D0\u793A <code>Property &#39;code&#39; does not exist on type &#39;Error&#39;.ts(2339)</code>\u3002</p><p>\u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528 <code>as AxiosError</code> \u6216\u8005 <code>as any</code> \u6765\u907F\u514D\u62A5\u9519\uFF0C\u4E0D\u8FC7\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u4E5F\u4E0D\u591F\u53CB\u597D</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>err <span class="token keyword">as</span> AxiosError<span class="token punctuation">)</span><span class="token punctuation">.</span>isAxiosError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">(</span>err <span class="token keyword">as</span> AxiosError<span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528 <code>is</code> \u6765\u5224\u5B9A\u503C\u7684\u7C7B\u578B</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">isAxiosError</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> error <span class="token keyword">is</span> AxiosError <span class="token punctuation">{</span>
  <span class="token keyword">return</span> error<span class="token punctuation">.</span>isAxiosError
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAxiosError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728 <code>GraphQL</code> \u7684\u6E90\u7801\u4E2D\uFF0C\u6709\u5F88\u591A\u8BF8\u5982\u6B64\u7C7B\u7684\u7528\u6CD5\uFF0C\u7528\u4EE5\u6807\u8BC6\u7C7B\u578B</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isScalarType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLScalarType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isObjectType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLObjectType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isInterfaceType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLInterfaceType<span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="interface-type" tabindex="-1">interface &amp; type <a class="header-anchor" href="#interface-type" aria-hidden="true">#</a></h2><p><code>interface</code> \u4E0E <code>type</code> \u7684\u533A\u522B\u662F\u4EC0\u4E48\uFF1F\u53EF\u4EE5\u53C2\u8003\u4EE5\u4E0B <code>stackoverflow</code> \u7684\u95EE\u9898</p><p><a href="https://stackoverflow.com/questions/37233735/typescript-interfaces-vs-types" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/37233735/typescript-interfaces-vs-types</a></p><p>\u4E00\u822C\u6765\u8BF4\uFF0C<code>interface</code> \u4E0E <code>type</code> \u533A\u522B\u5F88\u5C0F\uFF0C\u6BD4\u5982\u4EE5\u4E0B\u4E24\u79CD\u5199\u6CD5\u5DEE\u4E0D\u591A</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5176\u4E2D <code>interface</code> \u53EF\u4EE5\u5982\u4E0B\u5408\u5E76\u591A\u4E2A\uFF0C\u800C <code>type</code> \u53EA\u80FD\u4F7F\u7528 <code>&amp;</code> \u7C7B\u8FDB\u884C\u8FDE\u63A5\u3002</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
    b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="record-dictionary-many" tabindex="-1">Record &amp; Dictionary &amp; Many <a class="header-anchor" href="#record-dictionary-many" aria-hidden="true">#</a></h2><p>\u8FD9\u51E0\u4E2A\u8BED\u6CD5\u7CD6\u662F\u4ECE <code>lodash</code> \u7684\u7C7B\u578B\u6E90\u7801\u4E2D\u5B66\u5230\u7684\uFF0C\u5E73\u65F6\u5DE5\u4F5C\u4E2D\u7684\u4F7F\u7528\u9891\u7387\u8FD8\u633A\u9AD8\u3002</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Dictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">NumericDictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span>Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token number">4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5B9E\u9645\u4E0A\u53EF\u7528 <code>Record</code> \u4EE3\u66FF <code>Dictionary</code> \u4E0E <code>NumericDictionary</code></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u4EE5\u4E0B\u4E8C\u8005\u7B49\u4EF7:</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p><code>Record</code> \u5DF2\u5185\u7F6E\u5728 Typescript \u4E2D\u539F\u751F\u5B9E\u73B0\uFF0C\u5728\u5E73\u65F6\u4E2D\u4EC5\u4F7F\u7528 <code>Record</code> \u5373\u53EF</p></blockquote><h2 id="infer-return-type-parameters-type" tabindex="-1">infer &amp; Return Type &amp; Parameters Type <a class="header-anchor" href="#infer-return-type-parameters-type" aria-hidden="true">#</a></h2><p>\u901A\u8FC7 <code>infer</code>\uFF0C\u53EF\u7C7B\u578B\u63A8\u5BFC\u51FA\u51FD\u6570\u53C2\u6570\u53CA\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A\u6709\u5173\u534F\u53D8\u4E0E\u9006\u53D8\u7684\u6982\u5FF5\uFF0C\u770B\u4E0D\u61C2\u53EF\u8DF3\u8FC7\u3002</p><p><em>\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u662F\u534F\u53D8\u7684\uFF0C\u800C\u53C2\u6570\u7C7B\u578B\u662F\u9006\u53D8\u7684\u3002</em>\uFF0C\u89C1 <a href="https://juejin.cn/post/6844904066821128199" target="_blank" rel="noopener noreferrer">\u9006\u53D8\u4E0E\u534F\u53D8</a></p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">id</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token keyword">type</span> <span class="token class-name">Parameters<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>ReturnType \u4E0E Parameters \u5DF2\u5185\u7F6E\u5728 Typescript \u4E2D\u539F\u751F\u5B9E\u73B0</p></blockquote><h2 id="\u4F7F\u7528-const-enum-\u7EF4\u62A4\u5E38\u91CF\u8868" tabindex="-1">\u4F7F\u7528 const enum \u7EF4\u62A4\u5E38\u91CF\u8868 <a class="header-anchor" href="#\u4F7F\u7528-const-enum-\u7EF4\u62A4\u5E38\u91CF\u8868" aria-hidden="true">#</a></h2><p>\u76F8\u6BD4\u4F7F\u7528\u5B57\u9762\u91CF\u5BF9\u8C61\u7EF4\u62A4\u5E38\u91CF\uFF0C<code>const enum</code> \u53EF\u4EE5\u63D0\u4F9B\u66F4\u5B89\u5168\u7684\u7C7B\u578B\u68C0\u67E5</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528 object \u7EF4\u62A4\u5E38\u91CF</span>
<span class="token keyword">const</span> <span class="token constant">TODO_STATUS</span> <span class="token punctuation">{</span>
  <span class="token constant">TODO</span><span class="token operator">:</span> <span class="token string">&#39;TODO&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DONE</span><span class="token operator">:</span> <span class="token string">&#39;DONE&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DOING</span><span class="token operator">:</span> <span class="token string">&#39;DOING&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528 const enum \u7EF4\u62A4\u5E38\u91CF</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">TODO_STATUS</span> <span class="token punctuation">{</span>
  <span class="token constant">TODO</span> <span class="token operator">=</span> <span class="token string">&#39;TODO&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DONE</span> <span class="token operator">=</span> <span class="token string">&#39;DONE&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DOING</span> <span class="token operator">=</span> <span class="token string">&#39;DOING&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">todos</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> <span class="token constant">TODO_STATUS</span><span class="token punctuation">)</span><span class="token operator">:</span> Todo<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">todos</span><span class="token punctuation">(</span><span class="token constant">TODO_STATUS</span><span class="token punctuation">.</span><span class="token constant">TODO</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="vs-code-tips-typescript-command" tabindex="-1">VS Code Tips &amp; Typescript Command <a class="header-anchor" href="#vs-code-tips-typescript-command" aria-hidden="true">#</a></h2><p>\u4F7F\u7528 VS Code \u6709\u65F6\u4F1A\u51FA\u73B0\uFF0C\u4F7F\u7528 <code>tsc</code> \u7F16\u8BD1\u65F6\u4EA7\u751F\u7684\u95EE\u9898\u4E0E <code>vs code</code> \u63D0\u793A\u7684\u95EE\u9898\u4E0D\u4E00\u81F4</p><p>\u627E\u5230\u9879\u76EE\u53F3\u4E0B\u89D2\u7684 <code>Typescript</code> \u5B57\u6837\uFF0C\u53F3\u4FA7\u663E\u793A\u5B83\u7684\u7248\u672C\u53F7\uFF0C\u53EF\u4EE5\u70B9\u51FB\u9009\u62E9 <code>Use Workspace Version</code>\uFF0C\u5B83\u8868\u793A\u4E0E\u9879\u76EE\u4F9D\u8D56\u7684 typescript \u7248\u672C\u4E00\u76F4\u3002</p><p>\u6216\u8005\u7F16\u8F91 <code>.vs-code/settings.json</code></p><div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;typescript.tsdk&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/typescript/lib&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="typescript-roadmap" tabindex="-1">Typescript Roadmap <a class="header-anchor" href="#typescript-roadmap" aria-hidden="true">#</a></h2><p>\u6700\u540E\u4E00\u6761\u4E5F\u662F\u6700\u91CD\u8981\u7684\u4E00\u6761\uFF0C\u7FFB\u9605 <code>Roadmap</code>\uFF0C\u4E86\u89E3 <code>ts</code> \u7684\u4E00\u4E9B\u65B0\u7684\u7279\u6027\u4E0E bug \u4FEE\u590D\u60C5\u51B5\u3002</p><p><a href="https://github.com/Microsoft/TypeScript/wiki/Roadmap" target="_blank" rel="noopener noreferrer">Typescript Roadmap</a></p><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><ul><li><a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/docs/handbook/advanced-types.html</a></li><li><a href="https://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html</a></li><li><a href="https://moin.world/2017/06/18/10-typescript-features-you-might-not-know/" target="_blank" rel="noopener noreferrer">https://moin.world/2017/06/18/10-typescript-features-you-might-not-know/</a></li></ul>`,82);function l(r,i,u,k,d,b){return e(),p("div",null,[n(`
 * @Author: lgy
 * @Date: 2021-10-13 16:47:28
 * @LastEditors: lgy
 * @LastEditTime: 2021-11-12 11:31:38
 * @Description: typescript \u9AD8\u7EA7\u6280\u5DE7
`),o,n("more"),c])}var g=a(t,[["render",l]]);export{y as __pageData,g as default};
